{"version":3,"sources":["mona.ts","workspace.tsx","helpers.ts","browser.tsx","tabs.tsx","uikitloader.js","index.tsx"],"names":["MonaInputPath","MonaOutputPath","MonaFileSystem","global","MonaModule","module","fs","FS","mkdir","inputMount","mount","IDBFS","outputMount","Promise","resolve","reject","syncfs","error","ensureModifiable","path","startsWith","length","Error","sync","pull","read","readFile","encoding","write","data","writeFile","unlink","rmdir","node","lookupPath","follow","tryNode","analyzePath","object","isFile","mode","isDirectory","isDir","this","_fs","_fileListeners","listeners","isOutputPath","notifyListenersDirect","_directoryListeners","getDirectoryContents","ensureNotExists","notifyFileListeners","notifyParentDirectoryListeners","contents","created","listener","addListener","removeListener","notifyListeners","entries","Object","filter","predicate","map","name","sort","directories","files","notifyDirectoryListeners","isSpecialDirectory","lastSeparator","lastIndexOf","substring","listenersForPath","get","add","set","Set","delete","size","listenersDirect","forEach","console","trace","buildFileSystem","Map","MonaRuntime","worker","Worker","onerror","e","stop","message","lineno","colno","onmessageerror","finishTask","id","task","onmessage","refresh","catch","terminate","cb","_tasks","assert","notifyRunListeners","isRunning","_runListeners","runListener","_nextId","_worker","postMessage","reason","createWorker","destroyWorker","tasks","values","clear","MonacoEnvironment","getWorkerUrl","_moduleId","_label","begin","_","value","end","callback","setContents","doRun","saving","running","handleError","a","reschedule","setTimeout","stale","saved","String","ran","run","result","currentContents","Proxy","WorkspaceContext","createContext","isCurrentTab","context","tab","visible","hasResult","currentTab","viewportHeightIfTab","tabAttributes","toLowerCase","hidden","TextArea","useContext","className","style","fontFamily","readOnly","join","Link","children","href","onClick","setCurrentTab","preventDefault","Workspace","selected","editorDiv","useRef","graphDiv","useState","errors","setErrors","autoSave","setAutoSave","autoRun","setAutoRun","setSaving","setRunning","scale","setScale","useMemo","appendError","concat","callbackWrapper","useEffect","timeout","clearTimeout","div","current","graph","dfa","element","DOMParser","parseFromString","documentElement","nodeName","document","createElement","innerText","transformOrigin","transform","appendChild","removeChild","editor","monaco","create","automaticLayout","onDidChangeModelContent","getValue","isFlush","isFirstSet","setContentsAndClose","view","saveViewState","setValue","restoreViewState","addFileListener","then","removeFileListener","dispose","ref","disabled","title","type","checked","onChange","target","visibility","Provider","min","max","step","parseFloat","satisfyingExample","counterExample","confirm","UIkit","modal","window","alert","isInvalidName","includes","getName","File","app","AppContext","deleteFile","textTransform","openTab","Directory","isSpecial","expanded","setExpanded","newChildName","setNewChildName","hasContent","addDirectoryListener","enumDirectory","removeDirectoryListener","toggleExpanded","createFile","childPath","createDirectory","deleteDirectory","cursor","childName","placeholder","Browser","TabsHandler","setTabs","tabs","fromEntries","newTabs","keys","index","indexOf","selectedPath","undefined","selectedTab","Tab","deleted","setDeleted","closeTab","stopPropagation","use","Icons","App","useReducer","action","localStorage","setItem","JSON","stringify","parse","getItem","tabHandler","rel","render","getElementById"],"mappings":"6TAuBaA,EAAgB,SAChBC,EAAiB,UAgCjBC,EAAb,2IAKI,4GAE0BC,EAAeC,aAFzC,cAEUC,EAFV,QAGUC,EAAKD,EAAOE,IACfC,MAAMR,GACTM,EAAGE,MAAMP,GACHQ,EAAaH,EAAGI,MAAML,EAAOM,MAAO,GAAIX,GACxCY,EAAcN,EAAGI,MAAML,EAAOM,MAAO,GAAIV,GAPnD,UAQU,IAAIY,SAAc,SAACC,EAASC,GAAV,OAAqBT,EAAGU,QAAO,GAAM,SAACC,GAAD,OAAgBA,EAAQF,EAAOE,GAASH,UARzG,eASUI,EAAmB,SAACC,GACtB,GAAIA,EAAKC,WAAWnB,KAAoBkB,EAAKE,SAAWpB,EAAeoB,QAA0C,MAAhCF,EAAKlB,EAAeoB,SACjG,MAAM,IAAIC,MAAJ,gBAAmBH,EAAnB,yBAEV,OAAOA,GAbf,kBAeW,CACHI,KAAM,kBAAM,IAAIV,SAAc,SAACC,EAASC,GAAV,OAAqBV,EAAOM,MAAMK,OAAOP,EAAWC,OAAO,GAAO,SAACO,GAAD,OAAgBA,EAAQF,EAAOE,GAASH,WACxIU,KAAM,kBAAM,IAAIX,SAAc,SAACC,EAASC,GAAV,OAAqBV,EAAOM,MAAMK,OAAOJ,EAAYF,OAAO,GAAM,SAACO,GAAD,OAAgBA,EAAQF,EAAOE,GAASH,WACxIW,KAAM,SAACN,GAAD,OAAUb,EAAGoB,SAASP,EAAM,CAAEQ,SAAU,UAC9CC,MAAO,SAACT,EAAMU,GAAP,OAAgBvB,EAAGwB,UAAUZ,EAAiBC,GAAOU,IAC5DE,OAAQ,SAACZ,GAAD,OAAUb,EAAGyB,OAAOb,EAAiBC,KAC7CX,MAAO,SAACW,GAAD,OAAUb,EAAGE,MAAMU,EAAiBC,KAC3Ca,MAAO,SAACb,GAAD,OAAUb,EAAG0B,MAAMd,EAAiBC,KAC3Cc,KAAM,SAACd,GAAD,OAAUb,EAAG4B,WAAWf,EAAM,CAAEgB,QAAQ,IAAQF,MACtDG,QAAS,SAACjB,GAAD,OAAUb,EAAG+B,YAAYlB,GAAM,GAAOmB,QAC/CC,OAAQ,SAACN,GAAD,OAAU3B,EAAGiC,OAAON,EAAKO,OACjCC,YAAa,SAACR,GAAD,OAAU3B,EAAGoC,MAAMT,EAAKO,SA1B7C,4CALJ,gFAmCI,SAA4BrB,GACxB,OAAOA,EAAKC,WAAWnB,KAAoBkB,EAAKE,SAAWpB,EAAeoB,QAA0C,MAAhCF,EAAKlB,EAAeoB,WApChH,4DAuCI,4HACqBsB,KAAKC,IAD1B,cACUtC,EADV,gBAEUA,EAAGkB,OAFb,qBAGoCmB,KAAKE,gBAHzC,IAGI,2BAAsD,EAAD,uBAAzC1B,EAAyC,KAAnC2B,EAAmC,KAC7CH,KAAKI,aAAa5B,KACZc,EAAO3B,EAAG8B,QAAQjB,GACxBwB,KAAKK,sBAAsBF,EAAWb,GAAQ3B,EAAGiC,OAAON,GAAQ3B,EAAGmB,KAAKN,GAAQ,OAN5F,4CASoCwB,KAAKM,qBATzC,IASI,2BAA2D,EAAD,uBAA9C9B,EAA8C,KAAxC2B,EAAwC,KAClDH,KAAKI,aAAa5B,KACZc,EAAO3B,EAAG8B,QAAQjB,KACZb,EAAGmC,YAAYR,IACvBU,KAAKK,sBAAsBF,EAAWH,KAAKO,qBAAqB5C,EAAIa,IAbpF,8EAvCJ,mFA0DI,SAA+Bb,EAAgBa,GAC3C,GAAIb,EAAG8B,QAAQjB,GACX,MAAM,IAAIG,MAAJ,0BAA6BH,EAA7B,wBA5DlB,2DAoEI,WAAoBA,GAApB,yFACqBwB,KAAKC,IAD1B,cACUtC,EADV,OAEU2B,EAAO3B,EAAG8B,QAAQjB,GAF5B,oBAGac,GAAQ3B,EAAGiC,OAAON,IAH/B,gDApEJ,sHA0EI,WAAwBd,GAAxB,uFACqBwB,KAAKC,IAD1B,cACUtC,EADV,OAEIqC,KAAKQ,gBAAgB7C,EAAIa,GACzBb,EAAGsB,MAAMT,EAAM,IAHnB,SAIUb,EAAGiB,OAJb,OAKIoB,KAAKS,oBAAoBjC,EAAM,IAC/BwB,KAAKU,+BAA+B/C,EAAIa,GAN5C,gDA1EJ,oHAmFI,WAAsBA,GAAtB,uFACqBwB,KAAKC,IAD1B,cACUtC,EADV,yBAEWA,EAAGmB,KAAKN,IAFnB,gDAnFJ,qHAwFI,WAAuBA,EAAcmC,GAArC,yFACqBX,KAAKC,IAD1B,cACUtC,EADV,OAEUiD,EAA8B,MAApBjD,EAAG8B,QAAQjB,GAC3Bb,EAAGsB,MAAMT,EAAMmC,GAHnB,SAIUhD,EAAGiB,OAJb,OAKIoB,KAAKS,oBAAoBjC,EAAMmC,GAC3BC,GACAZ,KAAKU,+BAA+B/C,EAAIa,GAPhD,gDAxFJ,wHAmGI,WAAwBA,GAAxB,uFACqBwB,KAAKC,IAD1B,cACUtC,EADV,QAEOyB,OAAOZ,GAFd,SAGUb,EAAGiB,OAHb,OAIIoB,KAAKS,oBAAoBjC,EAAM,MAC/BwB,KAAKU,+BAA+B/C,EAAIa,GAL5C,gDAnGJ,oFA2GI,SAAuBA,EAAcqC,GACjCb,KAAKc,YAAYd,KAAKE,eAAgB1B,EAAMqC,KA5GpD,gCA+GI,SAA0BrC,EAAcqC,GACpCb,KAAKe,eAAef,KAAKE,eAAgB1B,EAAMqC,KAhHvD,iCAmHI,SAAmCrC,EAAcmC,GAC7CX,KAAKgB,gBAAgBhB,KAAKE,eAAgB1B,EAAMmC,KApHxD,kCA2HI,SAAoChD,EAAgBa,GAChD,IAAMyC,EAAUC,OAAOD,QAAQtD,EAAG2B,KAAKd,GAAMmC,UACvCQ,EAAS,SAACC,GAAD,OAAkDH,EAAQE,QAAO,mCAAK7B,GAAL,kBAAe8B,EAAU9B,MAAO+B,KAAI,mCAAEC,EAAF,iBAAeA,KAAMC,QACzI,MAAO,CACHC,YAAaL,GAAO,SAAA7B,GAAI,OAAI3B,EAAGmC,YAAYR,MAC3CmC,MAAON,GAAO,SAAA7B,GAAI,OAAI3B,EAAGiC,OAAON,SAhI5C,gCAoII,SAA0Bd,GACtB,OAAOA,IAASnB,GAAiBmB,IAASlB,IArIlD,gEAwII,WAAyBkB,GAAzB,yFACqBwB,KAAKC,IAD1B,cACUtC,EADV,OAEU2B,EAAO3B,EAAG8B,QAAQjB,GAF5B,oBAGac,GAAQ3B,EAAGmC,YAAYR,IAHpC,gDAxIJ,2HA8II,WAA6Bd,GAA7B,uFACqBwB,KAAKC,IAD1B,cACUtC,EADV,OAEIqC,KAAKQ,gBAAgB7C,EAAIa,GACzBb,EAAGE,MAAMW,GAHb,SAIUb,EAAGiB,OAJb,OAKIoB,KAAK0B,yBAAyBlD,EAAM,CAAEgD,YAAa,GAAIC,MAAO,KAC9DzB,KAAKU,+BAA+B/C,EAAIa,GAN5C,gDA9IJ,yHAuJI,WAA2BA,GAA3B,uFACqBwB,KAAKC,IAD1B,cACUtC,EADV,yBAEWqC,KAAKO,qBAAqB5C,EAAIa,IAFzC,gDAvJJ,2HA4JI,WAA6BA,GAA7B,uFACqBwB,KAAKC,IAD1B,UACUtC,EADV,QAEQqC,KAAK2B,mBAAmBnD,GAFhC,sBAGc,IAAIG,MAAJ,2CAA8CH,EAA9C,OAHd,cAKIb,EAAG0B,MAAMb,GALb,SAMUb,EAAGiB,OANb,OAOIoB,KAAKU,+BAA+B/C,EAAIa,GAP5C,gDA5JJ,yFAsKI,SAA4BA,EAAcqC,GACtCb,KAAKc,YAAYd,KAAKM,oBAAqB9B,EAAMqC,KAvKzD,qCA0KI,SAA+BrC,EAAcqC,GACzCb,KAAKe,eAAef,KAAKM,oBAAqB9B,EAAMqC,KA3K5D,sCA8KI,SAAwCrC,EAAcmC,GAClDX,KAAKgB,gBAAgBhB,KAAKM,oBAAqB9B,EAAMmC,KA/K7D,4CAkLI,SAA8ChD,EAAgBa,GAC1D,IAAMoD,EAAgBpD,EAAKqD,YAAY,KACnCD,GAAiB,IACjBpD,EAAOA,EAAKsD,UAAU,EAAGF,GACzB5B,KAAK0B,yBAAyBlD,EAAMwB,KAAKO,qBAAqB5C,EAAIa,OAtL9E,yBA8LI,SAA8B2B,EAAgC3B,EAAcqC,GACxE,IAAMkB,EAAmB5B,EAAU6B,IAAIxD,GACnCuD,EACAA,EAAiBE,IAAIpB,GAGrBV,EAAU+B,IAAI1D,EAAM,IAAI2D,IAAI,CAACtB,OApMzC,4BAwMI,SAAiCV,EAAgC3B,EAAcqC,GAC3E,IAAMkB,EAAmB5B,EAAU6B,IAAIxD,GACnCuD,GAAoBA,EAAiBK,OAAOvB,IAAuC,IAA1BkB,EAAiBM,MAC1ElC,EAAUiC,OAAO5D,KA3M7B,6BA+MI,SAAkC2B,EAAoD3B,EAAcmC,GAChG,IAAM2B,EAAkBnC,EAAU6B,IAAIxD,GAClC8D,GACAtC,KAAKK,sBAAsBiC,EAAiB3B,KAlNxD,mCAsNI,SAAwCR,EAAuCQ,GAC3ER,EAAUoC,SAAQ,SAAA1B,GACd,IAAMA,EAASF,GACf,MAAOrC,GAASkE,QAAQC,MAAMnE,WAzN1C,KAAaf,EACe0C,IADf1C,EAC0BmF,kBAD1BnF,EAEe2C,eAAiB,IAAIyC,IAFpCpF,EAGe+C,oBAAsB,IAAIqC,IAwP/C,IAAMC,EAAb,iGAMI,WAAuC,IAAD,OAC5BC,EAAS,IAAIC,OAAO,gCAAiC,CAAExB,KAAM,SAYnE,OAXAuB,EAAOE,QAAU,SAAAC,GAAC,OAAI,EAAKC,KAAL,2BAA8BD,EAAEE,QAAhC,aAA4CF,EAAEG,OAA9C,YAAwDH,EAAEI,MAA1D,OACtBP,EAAOQ,eAAiB,SAAAL,GAAC,OAAI,EAAKM,WAAWN,EAAE9D,KAAKqE,IAAI,SAAAC,GAAI,OAAIA,EAAKpF,OAAO,6CAC5EyE,EAAOY,UAAY,SAAAT,GAAC,OAAI,EAAKM,WAAWN,EAAE9D,KAAKqE,IAAI,SAAAC,GAC/CjG,EAAemG,UAAUC,OAAM,SAAArF,GAAK,OAAIkE,QAAQC,MAAMnE,MAClD0E,EAAE9D,KAAKZ,MACPkF,EAAKpF,OAAO4E,EAAE9D,KAAKZ,OAGnBkF,EAAKrF,QAAQ6E,EAAE9D,UAGhB2D,IAnBf,2BAsBI,SAA6BA,GACzBA,EAAOe,YACPf,EAAOE,QAAU,KACjBF,EAAOQ,eAAiB,KACxBR,EAAOY,UAAY,OA1B3B,wBA6BI,SAA0BF,EAAYM,GAClC,IAAML,EAAOxD,KAAK8D,OAAO9B,IAAIuB,GAC7B,GAAIC,EAAM,CACNhB,QAAQuB,OAAO/D,KAAK8D,OAAO1B,OAAOmB,IACT,IAArBvD,KAAK8D,OAAOzB,MACZrC,KAAKgE,oBAAmB,GAE5B,IAAMH,EAAGL,GACT,MAAOlF,GAASkE,QAAQC,MAAMnE,OArC1C,gCAyCI,SAAkC2F,GAC9BjE,KAAKkE,cAAc3B,SAAQ,SAAA4B,GACvB,IAAMA,EAAYF,GAClB,MAAO3F,GAASkE,QAAQC,MAAMnE,SA5C1C,4BAgDI,SAAsBuC,GAClBb,KAAKkE,cAAcjC,IAAIpB,KAjD/B,+BAoDI,SAAyBA,GACrBb,KAAKkE,cAAc9B,OAAOvB,KArDlC,iBAwDI,SAAWrC,EAAcd,GAAgD,IAAD,OACpE,OAAO,IAAIQ,SAAkB,SAACC,EAASC,GACnC,IAAMmF,IAAO,EAAKa,QAClB,EAAKN,OAAO5B,IAAIqB,EAAI,CAAEpF,UAASC,WACN,IAArB,EAAK0F,OAAOzB,MACZ,EAAK2B,oBAAmB,GAE5B,IAAM,EAAKK,QAAQC,YAAY,CAAEf,KAAI/E,OAAMd,WAC3C,MAAOY,GAAS,EAAKgF,WAAWC,GAAI,SAAAC,GAAI,OAAIA,EAAKpF,OAAOE,YAhEpE,kBAoEI,SAAYiG,GACR,IAAM1B,EAAS7C,KAAKqE,QACpBrE,KAAKqE,QAAUrE,KAAKwE,eACpBxE,KAAKyE,cAAc5B,GACnB,IAAM6B,EAAK,YAAO1E,KAAK8D,OAAOa,UAC9B3E,KAAK8D,OAAOc,QACZ5E,KAAKgE,oBAAmB,GACxBU,EAAMnC,SAAQ,SAAAiB,GACV,IAAMA,EAAKpF,OAAOmG,GAClB,MAAOjG,GAASkE,QAAQC,MAAMnE,WA7E1C,KAAasE,EACMyB,QADNzB,EACqB4B,eADrB5B,EAEekB,OAAS,IAAInB,IAF5BC,EAGesB,cAAgB,IAAI/B,IAHnCS,EAIMwB,QAAU,I,mLC3R7B5G,EAAOqH,kBAAoB,CAAEC,aAAc,SAACC,EAAgBC,GAAjB,MAAoC,yCAW/E,IAAMC,EAAQ,SAACpB,GAAD,OAAuD,IAAI3F,SAAiB,SAACC,EAAS+G,GAAV,OAAgBrB,GAAG,SAAAsB,GAEzG,OADAhH,GAASgH,IACF,SAGLC,EAAM,SAACvB,GAAD,OAAuD,IAAI3F,SAAc,SAACC,EAAS+G,GAAV,OAAgBrB,GAAG,SAAAsB,GAKpG,OAJAhH,IACKgH,GACD3C,QAAQC,MAAM,2BAEX,SAGL4C,EAAQ,uCAAG,WACb1E,EACA2E,EACAC,EACAC,EACAC,EACAC,GANa,eAAAC,EAAA,yDAQPC,EAAa,kBAAMC,YAAW,kBAAMR,EAAS1E,EAAU2E,EAAaC,EAAOC,EAAQC,EAASC,KAAc,MAE3G/E,EAASmF,OAAUnF,EAASoF,MAVpB,iCAWEd,EAAMO,GAXR,wCAYLI,IAZK,uCAgBDjF,EAASmF,MAhBR,sDAmBAnF,EAASoF,MAnBT,kCAoBKxI,IAAe4B,UAAUwB,EAASnC,KAAMmC,EAASzB,MApBtD,QAsBLyB,EAASoF,OAAQ,EAtBZ,yDAyBLL,EAAY,wBAAD,OAAyBM,OAAO,EAAD,MAzBrC,sDA6BCZ,EAAII,GA7BL,uCAiCR7E,EAASmF,OAAUnF,EAASsF,MAAOV,EAjC3B,kCAkCEN,EAAMQ,GAlCR,0CAmCLG,IAnCK,yCAuCDjF,EAASmF,MAvCR,sDA0CAnF,EAASsF,IA1CT,kCA2CuBrD,IAAYsD,IAAIvF,EAASnC,KAAMmC,EAASzB,KAAKT,WAAW,YAAc,UAAY,QA3CzG,QA2CDkC,EAASwF,OA3CR,OA4CDxF,EAASsF,KAAM,EA5Cd,kEAgDLP,EAAY,uBAAD,OAAwBM,OAAO,EAAD,MAhDpC,sDAoDCZ,EAAIK,GApDL,oCAwDR9E,EAASmF,OACVR,GAAY,SAAAc,GAAe,OAAIzF,EAASmF,MAAQM,EAAkB,IAAIC,MAAM1F,EAAU,OAzD7E,8EAAH,gEAuER2F,EAAmBC,wBAAc,IAEjCC,EAAe,SAACC,EAAkBC,GAAnB,OAAgCD,EAAQE,UAAYF,EAAQG,UAAYH,EAAQI,aAAeH,EAAc,WAARA,IAEpHI,EAAsB,SAACL,EAAkBC,GAAnB,OAAgCF,EAAaC,EAASC,GAC5E,CAAE,0BAA0B,yCAA1B,OAAoED,EAAQlD,KAC9E,IAEAwD,EAAgB,SAACN,EAAkBC,GAAnB,oBAClBnD,GAAG,GAAD,OAAKmD,EAAIM,eAAT,OAAyBP,EAAQlD,IACnC0D,QAAST,EAAaC,EAASC,IAC5BI,EAAoBL,EAASC,KAG9BQ,EAAW,SAAC,GAGX,IAAD,EAHcR,EAGd,EAHcA,IAAK/B,EAGnB,EAHmBA,OAIf8B,EAAUU,qBAAWb,GAC3B,OACI,oDAAcS,EAAcN,EAASC,IAArC,IAA2CU,UAAU,2BAA2BC,MAAO,CAAEC,WAAY,aAAeC,UAAU,EAAMpC,MAAK,iBAAER,QAAF,IAAEA,OAAF,EAAEA,EAAQ6C,KAAK,aAAf,QAAwB,OAInKC,EAAO,SAAC,GAGP,IAHSf,EAGV,EAHUA,IAAKgB,EAGf,EAHeA,SAIXjB,EAAUU,qBAAWb,GAC3B,OACI,oBAAIc,UAAWZ,EAAaC,EAASC,GAAO,YAAsB,WAARA,GAAqBD,EAAQG,UAA4B,GAAhB,cAAnG,SACI,mBAAGe,KAAI,WAAMjB,EAAIM,eAAV,OAA0BP,EAAQlD,IAAMqE,QAAS,SAAA5E,GAAOyD,EAAQoB,cAAcnB,GAAM1D,EAAE8E,kBAA7F,SAAmHJ,OAKlHK,EAAY,SAAC,GAKnB,IAAD,IALsBxE,EAKtB,EALsBA,GAAI/E,EAK1B,EAL0BA,KAAM+I,EAKhC,EALgCA,SAAUS,EAK1C,EAL0CA,SAMtCC,EAAYC,iBAAuB,MACnCC,EAAWD,iBAAuB,MACxC,EAA4BE,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAc,SAAlD,mBAAOvB,EAAP,KAAmBgB,EAAnB,KACA,EAAgCO,mBAAmB,CAAE5J,OAAMU,KAAM,GAAI6G,OAAO,EAAME,KAAK,EAAME,OAAQ,KAAML,OAAO,IAAlH,mBAAOnF,EAAP,KAAiB2E,EAAjB,KACA,EAAgC8C,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,oBAAS,GAArC,mBAAO5C,EAAP,KAAemD,EAAf,KACA,EAA8BP,oBAAS,GAAvC,mBAAO3C,EAAP,KAAgBmD,EAAhB,KACA,EAA0BR,mBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMrC,EAAUsC,mBAAiB,iBAAO,CACpCxF,KACAsD,aACAgB,gBACAjB,YAAajG,EAASwF,OACtBQ,QAASqB,KACT,CAACzE,EAAIsD,EAAYlG,EAAUqH,IAEzBgB,GAAc,SAAC9F,GACjBoF,GAAU,SAAAD,GAAM,OAAIA,EAAOY,OAAO,CAAC/F,QAGjCgG,GAAkB,SAAC3D,GAAD,OAAoBF,EAAS1E,EAAU2E,EAAaC,EAAOoD,EAAWC,EAAYI,KA+F1G,OA7FAG,qBAAU,WACDZ,GACDG,GAAW,KAEhB,CAACH,IAEJY,qBAAU,WACFV,GACAD,GAAY,KAEjB,CAACC,IAEJU,qBAAU,WACN,GAAMZ,IAAY5H,EAASoF,OAAY0C,IAAW9H,EAASwF,OAA3D,CAGA,IAAMiD,EAAUvD,YAAW,kBAAMR,EAAS1E,EAAU2E,EAAamD,EAASE,EAAWC,EAAYI,MAAc,KAC/G,OAAO,kBAAMK,aAAaD,OAC3B,CAACzI,EAAU4H,EAAUE,IAExBU,qBAAU,WAAO,IAAD,IACNG,EAAMnB,EAASoB,QACrB,GAAKD,EAAL,CAIA,IAAME,EAAK,UAAG7I,EAASwF,cAAZ,iBAAG,EAAiBsD,WAApB,aAAG,EAAsBD,MACpC,GAAKA,EAGL,IACI,IAAIE,GAAU,IAAIC,WAAYC,gBAAgBJ,EAAO,iBAAiBK,gBAQtE,MAPyB,QAArBH,EAAQI,YACRJ,EAAUK,SAASC,cAAc,QACzBC,UAAYT,GAExBE,EAAQrC,MAAM6C,gBAAkB,WAChCR,EAAQrC,MAAM8C,UAAd,gBAAmCtB,EAAnC,KACAS,EAAIc,YAAYV,GACT,WAAQJ,EAAIe,YAAYX,IAEnC,MAAOpL,GAEH,YADA0K,GAAY,uBAAD,OAAwBhD,OAAO1H,WAnB1C0K,GAAY,0BAsBjB,CAACrI,EAAUkI,IAEdM,qBAAU,WACN,GAAKlB,EAAUsB,QAAf,CAIA,IAAMe,EAASC,IAAcC,OAAOvC,EAAUsB,QAAS,CACnDhC,SAAUA,EACVkD,iBAAiB,IAErBH,EAAOI,yBAAwB,SAAA1H,GAC3BsC,GAAY,SAAA3E,GAER,OADAA,EAASmF,OAAQ,EACV,CACHtH,OACAU,KAAMoL,EAAOK,WACb5E,MAAO/C,EAAE4H,QACT3E,KAAK,EACLE,OAAQ,KACRL,OAAO,MAGfwC,EAAU,OAGd,IAAIuC,GAAa,EACXC,EAAsB,SAACnK,GACzB,GAAgB,MAAZA,IAAqB4G,GAAYsD,GAAa,CAC9CA,GAAa,EACb,IAAME,EAAOT,EAAOU,gBACpBV,EAAOW,SAAStK,GACZoK,GACAT,EAAOY,iBAAiBH,KASpC,OALAxN,IAAe4N,gBAAgB3M,EAAMsM,GACrCvN,IAAewB,SAASP,GACnB4M,KAAKN,GACLnH,OAAM,SAAAY,GAAM,OAAIyE,GAAY,wBAAD,OAAyBhD,OAAOzB,QAEzD,WACHhH,IAAe8N,mBAAmB7M,EAAMsM,GACxCR,EAAOgB,WAxCPtC,GAAY,2BA0CjB,CAACxK,EAAM+I,IAGN,sBAAKH,UAAU,+CAA+C,kBAA9D,UACI,sBAAKA,UAAU,eAAf,UACI,iCAAKmE,IAAKtD,GAAeD,GAAY,CAAE,0BAA2B,2CAClE,qBAAKZ,UAAU,6CAA6C,oBAA5D,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,wBAAQA,UAAU,8BAA8BoE,SAAU7K,EAASoF,OAASP,EAAQiG,MAAM,YAAY7D,QAAS,kBAAMsB,IAAgB,IAArI,SAA6I,sBAAM,eAAa,eAChK,kCAAO,uBAAOwC,KAAK,WAAWtE,UAAU,cAAcuE,QAASpD,EAAUqD,SAAU,SAAA5I,GAAC,OAAIwF,EAAYxF,EAAE6I,OAAOF,YAA7G,gBACA,qBAAK,qBAAgBtE,MAAO,CAAEyE,WAAYtG,EAAS,UAAY,eAEnE,sBAAK4B,UAAU,iBAAf,UACI,wBAAQA,UAAS,8BAAyB3B,EAAU,SAAW,WAAa+F,SAAU7K,EAASsF,IAAKwF,MAAOhG,EAAU,YAAc,WAAYmC,QAAS,kBAAMnC,EAAU7C,IAAYK,KAAK,sBAAwBiG,IAAgB,IAAjO,SAAwO,sBAAM,eAAczD,EAAU,OAAS,WAC/Q,kCAAO,uBAAOiG,KAAK,WAAWtE,UAAU,cAAcuE,QAASlD,EAASmD,SAAU,SAAA5I,GAAC,OAAI0F,EAAW1F,EAAE6I,OAAOF,YAA3G,eACA,qBAAK,qBAAgBtE,MAAO,CAAEyE,WAAYrG,EAAU,UAAY,uBAKhF,qBAAK2B,UAAU,eAAf,SACI,eAACd,EAAiByF,SAAlB,CAA2B5G,MAAOsB,EAAlC,UACI,cAACS,EAAD,CAAUR,IAAI,SAAS/B,OAAQ0D,IAC/B,gDAAStB,EAAcN,EAAS,UAAhC,cACI,qBAAKW,UAAU,YAAf,SACI,uBAAOA,UAAU,WAAWsE,KAAK,QAAQM,IAAI,IAAIC,IAAI,KAAKC,KAAK,MAAM/G,MAAO0D,EAAO+C,SAAU,SAAA5I,GAAC,OAAI8F,EAASqD,WAAWnJ,EAAE6I,OAAO1G,aAEnI,6CAAKiC,UAAU,gCAAmCN,EAAoBL,EAAS,UAA/E,aACI,qBAAK8E,IAAKpD,WAGlB,cAACjB,EAAD,CAAUR,IAAI,oBAAoB/B,OAAM,UAAEhE,EAASwF,cAAX,aAAE,EAAiBiG,oBAC3D,cAAClF,EAAD,CAAUR,IAAI,iBAAiB/B,OAAM,UAAEhE,EAASwF,cAAX,aAAE,EAAiBkG,iBACxD,qBAAK9I,GAAE,cAASkD,EAAQlD,IAAxB,SACI,qBAAI6D,UAAU,+CAAd,UACI,cAACK,EAAD,CAAMf,IAAI,SAAV,oBACA,cAACe,EAAD,CAAMf,IAAI,QAAV,mBACA,cAACe,EAAD,CAAMf,IAAI,oBAAV,gCACA,cAACe,EAAD,CAAMf,IAAI,iBAAV,6C,uLC/RrB,SAAe4F,EAAtB,kC,4CAAO,WAAuBpJ,GAAvB,SAAAyC,EAAA,+EAEO4G,IAAMC,MAAMF,QAAQpJ,GAF3B,iCAGQ,GAHR,2DAKQ,MAAQuJ,OAAOH,QAAQpJ,IAL/B,yD,sBASA,SAAewJ,EAAtB,kC,4CAAO,WAAqBxJ,GAArB,SAAAyC,EAAA,+EAEO4G,IAAMC,MAAME,MAAMxJ,GAFzB,sDAICuJ,OAAOC,MAAMxJ,GAJd,yD,2CCdDyJ,EAAgB,SAACrL,GAAD,OAAkC,IAAhBA,EAAK5C,QAAgB4C,EAAKsL,SAAS,MAErEC,EAAU,SAACrO,GAAD,OAAkBA,EAAKsD,UAAUtD,EAAKqD,YAAY,KAAO,IAEnEiL,EAAO,SAAC,GAA6D,IAA3DtO,EAA0D,EAA1DA,KAAM+I,EAAoD,EAApDA,SACZwF,EAAM5F,qBAAW6F,GACjB1L,EAAOuL,EAAQrO,GAIfyO,EAAU,uCAAG,sBAAAtH,EAAA,sEACL2G,EAAQ,6CAAD,OAA8C9N,EAA9C,OADF,4DAECjB,IAAe0P,WAAWzO,GAF3B,wEAGWkO,EAAM1G,OAAO,EAAD,KAHvB,yDAAH,qDAOhB,OACI,sBAAKoB,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,oBAEnB,qBAAKA,UAAU,kBAAf,SACI,yBAAQA,UAAU,wEAAwEC,MAAO,CAAE6F,cAAe,QAAUzB,MAAM,YAAY7D,QAfzI,kBAAMmF,EAAII,QAAQ3O,EAAM+I,IAe7B,UACI,sBAAM,eAAa,cADvB,IAC4CjG,OAGhD,qBAAK8F,UAAU,gBAAf,SACKG,GACG,wBAAQH,UAAU,+DAA+DqE,MAAM,cAAc7D,QAASqF,EAA9G,SACI,sBAAM,eAAa,kBAQrCG,EAAY,SAAZA,EAAa,GAA6D,IAA3D5O,EAA0D,EAA1DA,KAAM+I,EAAoD,EAApDA,SACjBwF,EAAM5F,qBAAW6F,GACjBK,EAAY9P,IAAeoE,mBAAmBnD,GACpD,EAAgC4J,mBAA+C,MAA/E,mBAAOzH,EAAP,KAAiB2E,EAAjB,KACA,EAAgC8C,mBAAkBiF,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCnF,mBAAiB,IAAzD,mBAAOoF,EAAP,KAAqBC,EAArB,KAEMnM,EAAOuL,EAAQrO,GACfkP,EAAa/M,IAAaA,aAAoBhC,OAASgC,EAASa,YAAY9C,OAAS,GAAKiC,EAASc,MAAM/C,OAAS,IAAM6I,GAE9H4B,qBAAU,WAGN,OAFA5L,IAAeoQ,qBAAqBnP,EAAM8G,GAC1C/H,IAAeqQ,cAAcpP,GAAM4M,KAAK9F,GAAa3B,OAAM,SAAAY,GAAM,OAAIe,EAAY,IAAI3G,MAAMqH,OAAOzB,QAC3F,kBAAMhH,IAAesQ,wBAAwBrP,EAAM8G,MAC3D,CAAC9G,IAEJ,IAAMsP,EAAiB,kBAAMP,GAAY,SAAAD,GAAQ,OAAKA,MAEhDS,EAAU,uCAAG,4BAAApI,EAAA,6DACTqI,EADS,UACMxP,EADN,YACcgP,GADd,kBAEHjQ,IAAewQ,WAAWC,GAFvB,wEAGctB,EAAM1G,OAAO,EAAD,KAH1B,iDAIfyH,EAAgB,IAChBV,EAAII,QAAQa,EAAWzG,GALR,yDAAH,qDAQV0G,EAAe,uCAAG,sBAAAtI,EAAA,+EACRpI,IAAe0Q,gBAAf,UAAkCzP,EAAlC,YAA0CgP,IADlC,uEAESd,EAAM1G,OAAO,EAAD,KAFrB,gDAGpByH,EAAgB,IAHI,yDAAH,qDAMfS,EAAe,uCAAG,sBAAAvI,EAAA,0DAChBhF,GAAcA,aAAoBhC,SAAWgC,EAASa,YAAY9C,OAAS,GAAKiC,EAASc,MAAM/C,OAAS,GADxF,gCAEVgO,EAAM,kBAAD,OAAmBlO,EAAnB,oBAFK,sDAIL8N,EAAQ,+CAAD,OAAgD9N,EAAhD,OAJF,6DAKJjB,IAAe2Q,gBAAgB1P,GAL3B,mDAMMkO,EAAM1G,OAAO,EAAD,KANlB,0DAAH,qDAUrB,OACI,sBAAKoB,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,gBAAf,SACKsG,GAAc,sBAAM,eAAcJ,EAAW,eAAiB,gBAAiBjG,MAAO,CAAE8G,OAAQ,WAAavG,QAASkG,QAG/H,sBAAK1G,UAAU,kBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,yBAAQA,UAAS,wEAAmEiG,EAAY,UAAY,aAAe5B,MAAK,UAAKiC,EAAcJ,EAAW,WAAa,SAAY,QAAvD,WAAyEjG,MAAO,CAAE6F,cAAe,QAAUtF,QAASkG,EAAgBtC,UAAWkC,EAA/Q,UACI,sBAAM,eAAa,WAAgB,sBAAMtG,UAAU,6CAAhB,SAA8D9F,KAAcX,GAAY,qBAAK,kBAAgB,oBAGxJ,qBAAKyG,UAAU,gBAAf,SACKG,GAAY8F,GACT,wBAAQjG,UAAU,+DAA+DqE,MAAM,gBAAgB7D,QAASsG,EAAhH,SACI,sBAAM,eAAa,iBAKlCR,GAAcJ,IAAa3M,aAAoBhC,MAC5C,qBAAKyI,UAAU,kBAAf,SACI,4BAAIzG,MAGR,qCACKA,EAASa,YAAYH,KAAI,SAAA+M,GAAS,OAAI,cAAChB,EAAD,CAA2B5O,KAAI,UAAKA,EAAL,YAAa4P,GAAa7G,SAAUA,GAAnD6G,MACtDzN,EAASc,MAAMJ,KAAI,SAAA+M,GAAS,OAAI,cAAC,EAAD,CAAsB5P,KAAI,UAAKA,EAAL,YAAa4P,GAAa7G,SAAUA,GAAnD6G,MAC3C7G,GACG,sBAAKH,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,oBAEnB,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,eAAe,eAAa,SAC5C,uBAAOA,UAAU,sCAAsCiH,YAAW,cAAS/M,EAAT,YAAyB6D,MAAOqI,EAAc5B,SAAU,SAAA5I,GAAC,OAAIyK,EAAgBzK,EAAE6I,OAAO1G,eAGhK,qBAAKiC,UAAU,gBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,gEAAgEqE,MAAM,cAAc7D,QAASmG,EAAYvC,SAAUmB,EAAca,GAAnJ,SACI,sBAAM,eAAa,gBAEvB,wBAAQpG,UAAU,kEAAkEqE,MAAM,mBAAmB7D,QAASqG,EAAiBzC,SAAUmB,EAAca,GAA/J,SACI,sBAAM,eAAa,gCAalDc,EAAU,kBACnB,sBAAKlH,UAAU,iBAAf,UACI,cAAC,EAAD,CAAW5I,KAAMnB,IAAekK,UAAU,IAC1C,cAAC,EAAD,CAAW/I,KAAMlB,IAAgBiK,UAAU,Q,sBCzItCgH,EAAb,WACI,WAAoBC,GAAmD,yBAAnDA,UADxB,2CAGI,SAAQhQ,EAAc+I,GAClBvH,KAAKwO,SAAQ,SAAAC,GAAI,kCACVvN,OAAOwN,YAAYxN,OAAOD,QAAQwN,GAAMpN,KAAI,mCAAE7C,EAAF,KAAQkI,EAAR,WAAiB,CAAClI,EAAD,2BAAYkI,GAAZ,IAAiBsB,UAAU,UAD9E,kBAEZxJ,EAAO,CAAE+I,WAAUS,UAAU,UAN1C,sBAUI,SAASxJ,GACLwB,KAAKwO,SAAQ,SAAAC,GACT,IAAM/H,EAAM+H,EAAKjQ,GACjB,GAAIkI,EAAK,CACL,IAAMiI,EAAO,eAAQF,GAErB,UADOE,EAAQnQ,GACXkI,EAAIsB,SAAU,CACd,IAAM4G,EAAO1N,OAAO0N,KAAKH,GACnBI,EAAQD,EAAKE,QAAQtQ,GACrBuQ,EAAgBF,EAAQ,EAAKD,EAAKlQ,OAASkQ,EAAKC,EAAQ,GAAMA,EAAQ,GAAM,EAAID,EAAKC,EAAQ,QAAKG,EACxG,QAAqBA,IAAjBD,EAA4B,CAC5B,IAAME,EAAcN,EAAQI,GACxBE,IACAN,EAAQI,GAAR,2BAA6BE,GAA7B,IAA0CjH,UAAU,MAIhE,OAAO2G,EAGP,OAAOF,SA9BvB,KAoCaS,EAAM,SAAC,GAKb,IALe3L,EAKhB,EALgBA,GAAI/E,EAKpB,EALoBA,KAAMwJ,EAK1B,EAL0BA,SAAUT,EAKpC,EALoCA,SAMhCwF,EAAM5F,qBAAW6F,GACvB,EAA8B5E,oBAAS,GAAvC,mBAAO+G,EAAP,KAAgBC,EAAhB,KASA,OAPAjG,qBAAU,WACN,IAAMtI,EAAW,SAACF,GAAD,OAA6ByO,EAAuB,MAAZzO,IAGzD,OAFApD,IAAe4N,gBAAgB3M,EAAMqC,GACrCtD,IAAeqC,OAAOpB,GAAM4M,MAAK,SAAAxL,GAAM,OAAIwP,GAAYxP,MAAS+D,MAAMnB,QAAQC,OACvE,kBAAMlF,IAAe8N,mBAAmB7M,EAAMqC,MACtD,CAACkM,EAAKvO,IAGL,oBAAI4I,UAAWY,EAAW,YAAc,GAAxC,SACI,oBAAGL,KAAMpE,EAAIqE,QAAS,SAAA5E,GAAO+J,EAAII,QAAQ3O,EAAM+I,GAAWvE,EAAE8E,kBAA5D,UACI,sBAAM,UAAQ,oBACd,uBAAMV,UAAU,6CAA6CC,MAAO,CAAE6F,cAAe,QAArF,UAAgG1O,EAAM+I,GAAY,eAAgB4H,GAAW,gBAC7I,wBAAQ,mBAAcvH,QAAS,SAAA5E,GAAO+J,EAAIsC,SAAS7Q,GAAOwE,EAAEsM,2B,yBCxF5E/C,IAAMgD,IAAIC,K,aC2BGxC,EAAazG,wBAAc,IAKlCkJ,EAAM,WAAO,IAAD,EACd,EAAwBC,sBAAW,SAACjB,EAAYkB,GAC5C,IAAMxJ,EAASwJ,EAAOlB,GAEtB,OADAhC,OAAOmD,aAAaC,QAAQ,OAAQC,KAAKC,UAAU5J,IAC5CA,IACR2J,KAAKE,MAAL,UAAWvD,OAAOmD,aAAaK,QAAQ,eAAvC,QAAkD,OAJrD,mBAAOxB,EAAP,KAAaD,EAAb,KAKM0B,EAAanH,mBAAQ,kBAAM,IAAIwF,EAAYC,KAAU,IAE3D,OACI,eAACxB,EAAWjB,SAAZ,CAAqB5G,MAAO+K,EAA5B,UACI,sBAAK9I,UAAU,2EAA2E,oBAA1F,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGA,UAAU,yBAAyByE,OAAO,SAASsE,IAAI,aAAaxI,KAAK,6BAA5E,wBAEJ,qBAAKP,UAAU,kBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGA,UAAU,8BAA8ByE,OAAO,SAASsE,IAAI,aAAaxI,KAAK,sCAAjF,2BAIZ,sBAAKP,UAAU,+CAA+C,kBAAa,0BAAwB,mBAAnG,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,SACI,oBAAIA,UAAU,YAAd,SAA0B,oBAAGO,KAAK,WAAWC,QAAS,SAAA5E,GAAC,OAAIA,EAAE8E,kBAAnC,UAAqD,sBAAM,UAAQ,eAAoB,sBAAMV,UAAU,uBAAuBC,MAAO,CAAE6F,cAAe,QAA/D,0BAErH,qBAAK3J,GAAG,UAAR,SACI,cAAC,EAAD,SAGR,sBAAK6D,UAAU,kBAAf,UACI,oBAAIA,UAAU,SAAd,SACKlG,OAAOD,QAAQwN,GAAMpN,KAAI,WAAcwN,GAAd,uBAAErQ,EAAF,KAAQkI,EAAR,YAAwB,cAAC,EAAD,CAAgBnD,GAAE,oBAAesL,GAASrQ,KAAMA,EAAMwJ,SAAUtB,EAAIsB,SAAUT,SAAUb,EAAIa,UAAlF/I,QAEhE,qBAAK4I,UAAU,YAAf,SACKlG,OAAOD,QAAQwN,GAAMpN,KAAI,WAAcwN,GAAd,uBAAErQ,EAAF,KAAQkI,EAAR,YAAwB,qBAAgBnD,GAAE,mBAAcsL,GAAS5H,QAASP,EAAIsB,SAAtD,SAAgE,cAAC,IAAD,aAAWzE,GAAIsL,EAAOrQ,KAAMA,GAAUkI,KAA5FlI,kBAQpF4R,iBAAO,cAAC,EAAD,IAASrG,SAASsG,eAAe,U","file":"static/js/main.5c209cdd.chunk.js","sourcesContent":["/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nexport const MonaInputPath = '/input';\nexport const MonaOutputPath = '/output';\n\nexport interface MonaDirectoryContents {\n    directories: string[]\n    files: string[]\n}\n\ninterface Node {\n    mode: number\n    contents: {\n        [name: string]: Node\n    }\n}\n\ninterface FileSystem {\n    sync: () => Promise<void>\n    pull: () => Promise<void>\n    read: (path: string) => string\n    write: (path: string, data: string) => void\n    unlink: (path: string) => void\n    mkdir: (path: string) => void\n    rmdir: (path: string) => void\n    node: (path: string) => Node\n    tryNode: (path: string) => Node | null\n    isFile: (node: Node) => boolean\n    isDirectory: (node: Node) => boolean\n}\n\nexport type MonaFileListener = (contents: string | null) => void\n\nexport type MonaDirectoryListener = (contents: MonaDirectoryContents) => void\n\nexport class MonaFileSystem {\n    private static readonly _fs = this.buildFileSystem();\n    private static readonly _fileListeners = new Map<string, Set<MonaFileListener>>();\n    private static readonly _directoryListeners = new Map<string, Set<MonaDirectoryListener>>();\n\n    private static async buildFileSystem(): Promise<FileSystem> {\n        // any-thing goes in this method, so be careful\n        const module = await (global as any).MonaModule();\n        const fs = module.FS;\n        fs.mkdir(MonaInputPath);\n        fs.mkdir(MonaOutputPath);\n        const inputMount = fs.mount(module.IDBFS, {}, MonaInputPath);\n        const outputMount = fs.mount(module.IDBFS, {}, MonaOutputPath);\n        await new Promise<void>((resolve, reject) => fs.syncfs(true, (error: any) => error ? reject(error) : resolve()));\n        const ensureModifiable = (path: string) => {\n            if (path.startsWith(MonaOutputPath) && (path.length === MonaOutputPath.length || path[MonaOutputPath.length] === '/')) {\n                throw new Error(`Path '${path}' is not modifiable.`);\n            }\n            return path;\n        };\n        return {\n            sync: () => new Promise<void>((resolve, reject) => module.IDBFS.syncfs(inputMount.mount, false, (error: any) => error ? reject(error) : resolve())),\n            pull: () => new Promise<void>((resolve, reject) => module.IDBFS.syncfs(outputMount.mount, true, (error: any) => error ? reject(error) : resolve())),\n            read: (path) => fs.readFile(path, { encoding: 'utf8' }),\n            write: (path, data) => fs.writeFile(ensureModifiable(path), data),\n            unlink: (path) => fs.unlink(ensureModifiable(path)),\n            mkdir: (path) => fs.mkdir(ensureModifiable(path)),\n            rmdir: (path) => fs.rmdir(ensureModifiable(path)),\n            node: (path) => fs.lookupPath(path, { follow: true }).node,\n            tryNode: (path) => fs.analyzePath(path, false).object,\n            isFile: (node) => fs.isFile(node.mode),\n            isDirectory: (node) => fs.isDir(node.mode),\n        };\n    }\n\n    private static isOutputPath(path: string): boolean {\n        return path.startsWith(MonaOutputPath) && (path.length === MonaOutputPath.length || path[MonaOutputPath.length] === '/');\n    }\n\n    static async refresh(): Promise<void> {\n        const fs = await this._fs;\n        await fs.pull();\n        for (const [path, listeners] of this._fileListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                this.notifyListenersDirect(listeners, node && fs.isFile(node) ? fs.read(path) : null);\n            }\n        }\n        for (const [path, listeners] of this._directoryListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                if (node && fs.isDirectory(node)) {\n                    this.notifyListenersDirect(listeners, this.getDirectoryContents(fs, path));\n                }\n            }\n        }\n    }\n\n    private static ensureNotExists(fs: FileSystem, path: string): void {\n        if (fs.tryNode(path)) {\n            throw new Error(`A node at path '${path}' already exists.`)\n        }\n    }\n\n    //\n    //  Files\n    //\n\n    static async isFile(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isFile(node);\n    }\n\n    static async createFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        fs.write(path, '');\n        await fs.sync();\n        this.notifyFileListeners(path, '');\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async readFile(path: string): Promise<string> {\n        const fs = await this._fs;\n        return fs.read(path);\n    }\n\n    static async writeFile(path: string, contents: string): Promise<void> {\n        const fs = await this._fs;\n        const created = fs.tryNode(path) == null;\n        fs.write(path, contents);\n        await fs.sync();\n        this.notifyFileListeners(path, contents);\n        if (created) {\n            this.notifyParentDirectoryListeners(fs, path);\n        }\n    }\n\n    static async deleteFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        fs.unlink(path);\n        await fs.sync();\n        this.notifyFileListeners(path, null);\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addFileListener(path: string, listener: MonaFileListener): void {\n        this.addListener(this._fileListeners, path, listener);\n    }\n\n    static removeFileListener(path: string, listener: MonaFileListener): void {\n        this.removeListener(this._fileListeners, path, listener);\n    }\n\n    private static notifyFileListeners(path: string, contents: string | null): void {\n        this.notifyListeners(this._fileListeners, path, contents);\n    }\n\n    //\n    // Directories\n    //\n\n    private static getDirectoryContents(fs: FileSystem, path: string): MonaDirectoryContents {\n        const entries = Object.entries(fs.node(path).contents);\n        const filter = (predicate: (node: Node) => boolean): string[] => entries.filter(([_, node]) => predicate(node)).map(([name, _]) => name).sort();\n        return {\n            directories: filter(node => fs.isDirectory(node)),\n            files: filter(node => fs.isFile(node)),\n        };\n    }\n\n    static isSpecialDirectory(path: string): boolean {\n        return path === MonaInputPath || path === MonaOutputPath;\n    }\n\n    static async isDirectory(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isDirectory(node);\n    }\n\n    static async createDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        fs.mkdir(path);\n        await fs.sync();\n        this.notifyDirectoryListeners(path, { directories: [], files: [] });\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async enumDirectory(path: string): Promise<MonaDirectoryContents> {\n        const fs = await this._fs;\n        return this.getDirectoryContents(fs, path);\n    }\n\n    static async deleteDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        if (this.isSpecialDirectory(path)) {\n            throw new Error(`Cannot delete special directory '${path}'.`);\n        }\n        fs.rmdir(path);\n        await fs.sync();\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.addListener(this._directoryListeners, path, listener);\n    }\n\n    static removeDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.removeListener(this._directoryListeners, path, listener);\n    }\n\n    private static notifyDirectoryListeners(path: string, contents: MonaDirectoryContents): void {\n        this.notifyListeners(this._directoryListeners, path, contents);\n    }\n\n    private static notifyParentDirectoryListeners(fs: FileSystem, path: string): void {\n        const lastSeparator = path.lastIndexOf('/');\n        if (lastSeparator > -1) {\n            path = path.substring(0, lastSeparator);\n            this.notifyDirectoryListeners(path, this.getDirectoryContents(fs, path));\n        }\n    }\n\n    //\n    // Listeners\n    //\n\n    private static addListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath) {\n            listenersForPath.add(listener);\n        }\n        else {\n            listeners.set(path, new Set([listener]));\n        }\n    }\n\n    private static removeListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath && listenersForPath.delete(listener) && listenersForPath.size === 0) {\n            listeners.delete(path);\n        }\n    }\n\n    private static notifyListeners<T>(listeners: Map<string, Set<(contents: T) => void>>, path: string, contents: T): void {\n        const listenersDirect = listeners.get(path);\n        if (listenersDirect) {\n            this.notifyListenersDirect(listenersDirect, contents);\n        };\n    }\n\n    private static notifyListenersDirect<T>(listeners: Set<(contents: T) => void>, contents: T): void {\n        listeners.forEach(listener => {\n            try { listener(contents); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n\nexport interface MonaData {\n    id: number\n    dfa?: {\n        freeVariables?: string[]\n        transitions?: {\n            [from: string]: {\n                [input: string]: string[]\n            }\n        }\n        initialState?: string\n        acceptingStates?: string[]\n        rejectingStates?: string[]\n        dontCareStates?: string[]\n        graph: string\n    }\n    counterExample?: string[]\n    satisfyingExample?: string[]\n    timings?: {\n        [label: string]: number\n    }\n}\n\nexport type MonaRunListener = (isRunning: boolean) => void\n\ninterface Task {\n    resolve: (value: MonaData | PromiseLike<MonaData>) => void\n    reject: (reason: any) => void\n}\n\nexport class MonaRuntime {\n    private static _worker = this.createWorker();\n    private static readonly _tasks = new Map<number, Task>();\n    private static readonly _runListeners = new Set<MonaRunListener>()\n    private static _nextId = 0;\n\n    private static createWorker(): Worker {\n        const worker = new Worker('/MONA-WEB/static/js/worker.js', { name: 'Mona' });\n        worker.onerror = e => this.stop(`Error in worker: ${e.message} (${e.lineno}:${e.colno})`);\n        worker.onmessageerror = e => this.finishTask(e.data.id, task => task.reject('Failed to deserialize worker message.'));\n        worker.onmessage = e => this.finishTask(e.data.id, task => {\n            MonaFileSystem.refresh().catch(error => console.trace(error));\n            if (e.data.error) {\n                task.reject(e.data.error);\n            }\n            else {\n                task.resolve(e.data);\n            }\n        });\n        return worker;\n    }\n\n    private static destroyWorker(worker: Worker): void {\n        worker.terminate();\n        worker.onerror = null;\n        worker.onmessageerror = null;\n        worker.onmessage = null;\n    }\n\n    private static finishTask(id: number, cb: (task: Task) => void): void {\n        const task = this._tasks.get(id);\n        if (task) {\n            console.assert(this._tasks.delete(id));\n            if (this._tasks.size === 0) {\n                this.notifyRunListeners(false);\n            }\n            try { cb(task); }\n            catch (error) { console.trace(error); }\n        }\n    }\n\n    private static notifyRunListeners(isRunning: boolean): void {\n        this._runListeners.forEach(runListener => {\n            try { runListener(isRunning); }\n            catch (error) { console.trace(error); }\n        });\n    }\n\n    static addRunListener(listener: MonaRunListener): void {\n        this._runListeners.add(listener);\n    }\n\n    static removeRunListener(listener: MonaRunListener): void {\n        this._runListeners.delete(listener);\n    }\n\n    static run(path: string, module: 'mona' | 'dfa2dot'): Promise<MonaData> {\n        return new Promise<MonaData>((resolve, reject) => {\n            const id = ++this._nextId;\n            this._tasks.set(id, { resolve, reject });\n            if (this._tasks.size === 1) {\n                this.notifyRunListeners(true);\n            }\n            try { this._worker.postMessage({ id, path, module }); }\n            catch (error) { this.finishTask(id, task => task.reject(error)); }\n        });\n    }\n\n    static stop(reason: any): void {\n        const worker = this._worker;\n        this._worker = this.createWorker();\n        this.destroyWorker(worker);\n        const tasks = [...this._tasks.values()];\n        this._tasks.clear();\n        this.notifyRunListeners(false);\n        tasks.forEach(task => {\n            try { task.reject(reason); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport * as monaco from 'monaco-editor';\nimport { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { MonaData, MonaFileSystem, MonaRuntime } from './mona';\n\n// @ts-ignore\nglobal.MonacoEnvironment = { getWorkerUrl: (_moduleId: any, _label: string) => '/MONA-WEB/static/js/editor.worker.js' };\n\ninterface Contents {\n    path: string\n    data: string\n    saved: boolean\n    ran: boolean\n    result: MonaData | null\n    stale: boolean\n}\n\nconst begin = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<boolean>((resolve, _) => cb(value => {\n    resolve(!value);\n    return true;\n}));\n\nconst end = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<void>((resolve, _) => cb(value => {\n    resolve();\n    if (!value) {\n        console.trace('Value already cleared.');\n    }\n    return false;\n}));\n\nconst callback = async (\n    contents: Contents,\n    setContents: (setter: (value: Contents) => Contents) => void,\n    doRun: boolean,\n    saving: (setter: (value: boolean) => boolean) => void,\n    running: (setter: (value: boolean) => boolean) => void,\n    handleError: (message: string) => void\n) => {\n    const reschedule = () => setTimeout(() => callback(contents, setContents, doRun, saving, running, handleError), 500);\n\n    if (!contents.stale && !contents.saved) {\n        if (!await begin(saving)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            if (!contents.saved) {\n                await MonaFileSystem.writeFile(contents.path, contents.data);\n            }\n            contents.saved = true;\n        }\n        catch (error) {\n            handleError(`Failed to save file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(saving);\n        }\n    }\n\n    if (!contents.stale && !contents.ran && doRun) {\n        if (!await begin(running)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            if (!contents.ran) {\n                contents.result = await MonaRuntime.run(contents.path, contents.data.startsWith('MONA DFA') ? 'dfa2dot' : 'mona');\n                contents.ran = true;\n            }\n        }\n        catch (error) {\n            handleError(`Failed to run file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(running);\n        }\n    }\n\n    if (!contents.stale) {\n        setContents(currentContents => contents.stale ? currentContents : new Proxy(contents, {}))\n    }\n};\n\ntype Tab = 'Errors' | 'Graph' | 'SatisfyingExample' | 'CounterExample'\n\ninterface Context {\n    id: number\n    currentTab: Tab\n    setCurrentTab: (tab: Tab) => void\n    hasResult: boolean\n    visible: boolean\n}\n\nconst WorkspaceContext = createContext({} as Context);\n\nconst isCurrentTab = (context: Context, tab: Tab) => context.visible && (context.hasResult ? context.currentTab === tab : tab === 'Errors');\n\nconst viewportHeightIfTab = (context: Context, tab: Tab) => isCurrentTab(context, tab)\n    ? { 'data-uk-height-viewport': `offset-top: true; offset-bottom: #tabs${context.id}` }\n    : {};\n\nconst tabAttributes = (context: Context, tab: Tab) => ({\n    id: `${tab.toLowerCase()}${context.id}`,\n    hidden: !isCurrentTab(context, tab),\n    ...viewportHeightIfTab(context, tab)\n});\n\nconst TextArea = ({ tab, values }: {\n    tab: Tab\n    values: string[] | undefined\n}) => {\n    const context = useContext(WorkspaceContext);\n    return (\n        <textarea {...tabAttributes(context, tab)} className=\"uk-textarea uk-width-1-1\" style={{ fontFamily: 'monospace' }} readOnly={true} value={values?.join('\\n') ?? ''} />\n    );\n};\n\nconst Link = ({ tab, children }: {\n    tab: Tab\n    children: string\n}) => {\n    const context = useContext(WorkspaceContext);\n    return (\n        <li className={isCurrentTab(context, tab) ? 'uk-active' : tab !== 'Errors' && !context.hasResult ? 'uk-disabled' : ''}>\n            <a href={`#${tab.toLowerCase()}${context.id}`} onClick={e => { context.setCurrentTab(tab); e.preventDefault(); }}>{children}</a>\n        </li>\n    );\n};\n\nexport const Workspace = ({ id, path, readOnly, selected }: {\n    id: number\n    path: string\n    readOnly: boolean\n    selected: boolean\n}) => {\n    const editorDiv = useRef<HTMLDivElement>(null);\n    const graphDiv = useRef<HTMLDivElement>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const [currentTab, setCurrentTab] = useState<Tab>('Graph');\n    const [contents, setContents] = useState<Contents>({ path, data: '', saved: true, ran: true, result: null, stale: false });\n    const [autoSave, setAutoSave] = useState(true);\n    const [autoRun, setAutoRun] = useState(true);\n    const [saving, setSaving] = useState(false);\n    const [running, setRunning] = useState(false);\n    const [scale, setScale] = useState(1);\n\n    const context = useMemo<Context>(() => ({\n        id,\n        currentTab,\n        setCurrentTab,\n        hasResult: !!contents.result,\n        visible: selected\n    }), [id, currentTab, contents, selected]);\n\n    const appendError = (message: string) => {\n        setErrors(errors => errors.concat([message]));\n    };\n\n    const callbackWrapper = (doRun: boolean) => callback(contents, setContents, doRun, setSaving, setRunning, appendError);\n\n    useEffect(() => {\n        if (!autoSave) {\n            setAutoRun(false);\n        }\n    }, [autoSave]);\n\n    useEffect(() => {\n        if (autoRun) {\n            setAutoSave(true);\n        }\n    }, [autoRun]);\n\n    useEffect(() => {\n        if ((!autoSave || contents.saved) && (!autoRun || contents.result)) {\n            return;\n        }\n        const timeout = setTimeout(() => callback(contents, setContents, autoRun, setSaving, setRunning, appendError), 500);\n        return () => clearTimeout(timeout);\n    }, [contents, autoSave, autoRun]);\n\n    useEffect(() => {\n        const div = graphDiv.current;\n        if (!div) {\n            appendError('Graph DIV not found.');\n            return;\n        }\n        const graph = contents.result?.dfa?.graph;\n        if (!graph) {\n            return;\n        }\n        try {\n            let element = new DOMParser().parseFromString(graph, 'image/svg+xml').documentElement;\n            if (element.nodeName !== 'svg') {\n                element = document.createElement('div');\n                element.innerText = graph;\n            }\n            element.style.transformOrigin = 'top left';\n            element.style.transform = `scale(${scale})`;\n            div.appendChild(element);\n            return () => { div.removeChild(element); }\n        }\n        catch (error) {\n            appendError(`Cannot render file: ${String(error)}`);\n            return;\n        }\n    }, [contents, scale]);\n\n    useEffect(() => {\n        if (!editorDiv.current) {\n            appendError('Editor DIV not found.');\n            return;\n        }\n        const editor = monaco.editor.create(editorDiv.current, {\n            readOnly: readOnly,\n            automaticLayout: true\n        });\n        editor.onDidChangeModelContent(e => {\n            setContents(contents => {\n                contents.stale = true;\n                return {\n                    path,\n                    data: editor.getValue(),\n                    saved: e.isFlush,\n                    ran: false,\n                    result: null,\n                    stale: false,\n                }\n            });\n            setErrors([]);\n        });\n\n        let isFirstSet = true;\n        const setContentsAndClose = (contents: string | null) => {\n            if (contents != null && (readOnly || isFirstSet)) {\n                isFirstSet = false;\n                const view = editor.saveViewState();\n                editor.setValue(contents);\n                if (view) {\n                    editor.restoreViewState(view);\n                }\n            }\n        };\n        MonaFileSystem.addFileListener(path, setContentsAndClose);\n        MonaFileSystem.readFile(path)\n            .then(setContentsAndClose)\n            .catch(reason => appendError(`Failed to read file: ${String(reason)}`));\n\n        return () => {\n            MonaFileSystem.removeFileListener(path, setContentsAndClose);\n            editor.dispose();\n        }\n    }, [path, readOnly]);\n\n    return (\n        <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid>\n            <div className=\"uk-width-1-2\">\n                <div ref={editorDiv} {...selected && { 'data-uk-height-viewport': \"offset-top: true; offset-bottom: true\" }}></div>\n                <nav className=\"uk-flex uk-flex-bottom uk-navbar-container\" data-uk-navbar>\n                    <div className=\"uk-navbar-left\">\n                        <div className=\"uk-navbar-item\">\n                            <button className=\"uk-button uk-button-default\" disabled={contents.saved || saving} title=\"Save File\" onClick={() => callbackWrapper(false)}><span data-uk-icon=\"database\"></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoSave} onChange={e => setAutoSave(e.target.checked)} /> Auto-Save</label>\n                            <div data-uk-spinner style={{ visibility: saving ? 'visible' : 'hidden' }}></div>\n                        </div>\n                        <div className=\"uk-navbar-item\">\n                            <button className={`uk-button uk-button-${running ? 'danger' : 'primary'}`} disabled={contents.ran} title={running ? 'Abort Run' : 'Run File'} onClick={() => running ? MonaRuntime.stop('Cancelled by user.') : callbackWrapper(true)}><span data-uk-icon={running ? 'bolt' : 'play'}></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoRun} onChange={e => setAutoRun(e.target.checked)} /> Auto-Run</label>\n                            <div data-uk-spinner style={{ visibility: running ? 'visible' : 'hidden' }}></div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n            <div className=\"uk-width-1-2\">\n                <WorkspaceContext.Provider value={context}>\n                    <TextArea tab=\"Errors\" values={errors} />\n                    <div {...tabAttributes(context, 'Graph')}>\n                        <div className=\"uk-margin\">\n                            <input className=\"uk-range\" type=\"range\" min=\"1\" max=\"10\" step=\"0.1\" value={scale} onChange={e => setScale(parseFloat(e.target.value))} />\n                        </div>\n                        <div className=\"uk-panel uk-panel-scrollable\" {...viewportHeightIfTab(context, 'Graph')}>\n                            <div ref={graphDiv}></div>\n                        </div>\n                    </div>\n                    <TextArea tab=\"SatisfyingExample\" values={contents.result?.satisfyingExample} />\n                    <TextArea tab=\"CounterExample\" values={contents.result?.counterExample} />\n                    <div id={`tabs${context.id}`}>\n                        <ul className=\"uk-tab-bottom uk-margin-remove-bottom uk-tab\">\n                            <Link tab=\"Errors\">Errors</Link>\n                            <Link tab=\"Graph\">Graph</Link>\n                            <Link tab=\"SatisfyingExample\">Satisfying Example</Link>\n                            <Link tab=\"CounterExample\">Counter-Example</Link>\n                        </ul>\n                    </div>\n                </WorkspaceContext.Provider>\n            </div>\n        </div>\n    );\n};\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport UIkit from 'uikit';\n\nexport async function prompt(message: string): Promise<string | null> {\n    try {\n        return await UIkit.modal.prompt(message, '');\n    } catch {\n        return window.prompt(message);\n    }\n}\n\nexport async function confirm(message: string): Promise<boolean> {\n    try {\n        await UIkit.modal.confirm(message);\n        return true;\n    } catch (error) {\n        return error ? window.confirm(message) : false;\n    }\n}\n\nexport async function alert(message: string): Promise<void> {\n    try {\n        await UIkit.modal.alert(message);\n    } catch {\n        window.alert(message);\n    }\n}\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '.';\nimport { alert, confirm } from './helpers';\nimport { MonaDirectoryContents, MonaFileSystem, MonaInputPath, MonaOutputPath } from './mona';\n\nconst isInvalidName = (name: string) => name.length === 0 || name.includes('/');\n\nconst getName = (path: string) => path.substring(path.lastIndexOf('/') + 1);\n\nconst File = ({ path, readOnly }: { path: string, readOnly: boolean }) => {\n    const app = useContext(AppContext);\n    const name = getName(path);\n\n    const openFile = () => app.openTab(path, readOnly);\n\n    const deleteFile = async () => {\n        if (await confirm(`Are you sure you want to delete the file '${path}'?`)) {\n            try { await MonaFileSystem.deleteFile(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\"></div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <button className=\"uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-default\" style={{ textTransform: 'none' }} title=\"Open File\" onClick={openFile}>\n                    <span data-uk-icon=\"file-text\"></span> {name}\n                </button>\n            </div>\n            <div className=\"uk-width-auto\">\n                {readOnly ||\n                    <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete File\" onClick={deleteFile}>\n                        <span data-uk-icon=\"close\"></span>\n                    </button>\n                }\n            </div>\n        </div>\n    );\n}\n\nconst Directory = ({ path, readOnly }: { path: string, readOnly: boolean }) => {\n    const app = useContext(AppContext);\n    const isSpecial = MonaFileSystem.isSpecialDirectory(path);\n    const [contents, setContents] = useState<MonaDirectoryContents | null | Error>(null);\n    const [expanded, setExpanded] = useState<boolean>(isSpecial);\n    const [newChildName, setNewChildName] = useState<string>('');\n\n    const name = getName(path);\n    const hasContent = contents && (contents instanceof Error || contents.directories.length > 0 || contents.files.length > 0 || !readOnly);\n\n    useEffect(() => {\n        MonaFileSystem.addDirectoryListener(path, setContents);\n        MonaFileSystem.enumDirectory(path).then(setContents).catch(reason => setContents(new Error(String(reason))));\n        return () => MonaFileSystem.removeDirectoryListener(path, setContents);\n    }, [path]);\n\n    const toggleExpanded = () => setExpanded(expanded => !expanded);\n\n    const createFile = async () => {\n        const childPath = `${path}/${newChildName}`;\n        try { await MonaFileSystem.createFile(childPath); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n        app.openTab(childPath, readOnly);\n    }\n\n    const createDirectory = async () => {\n        try { await MonaFileSystem.createDirectory(`${path}/${newChildName}`); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n    }\n\n    const deleteDirectory = async () => {\n        if (contents && !(contents instanceof Error) && (contents.directories.length > 0 || contents.files.length > 0)) {\n            await alert(`The directory '${path}' is not empty.`);\n        }\n        else if (await confirm(`Are you sure you want to delete the folder '${path}'?`)) {\n            try { await MonaFileSystem.deleteDirectory(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\">\n                    {hasContent && <span data-uk-icon={expanded ? 'chevron-down' : 'chevron-right'} style={{ cursor: 'pointer' }} onClick={toggleExpanded}></span>}\n                </div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <div className=\"uk-flex\">\n                    <div className=\"uk-width-expand\">\n                        <button className={`uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-${isSpecial ? 'primary' : 'secondary'}`} title={`${hasContent ? (expanded ? 'Collapse' : 'Expand') : 'Empty'} Folder`} style={{ textTransform: 'none' }} onClick={toggleExpanded} disabled={!hasContent}>\n                            <span data-uk-icon=\"folder\"></span><span className=\"uk-margin-small-left uk-margin-small-right\">{name}</span>{!contents && <div data-uk-spinner=\"ratio: 0.5\"></div>}\n                        </button>\n                    </div>\n                    <div className=\"uk-width-auto\">\n                        {readOnly || isSpecial ||\n                            <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete Folder\" onClick={deleteDirectory}>\n                                <span data-uk-icon=\"close\"></span>\n                            </button>\n                        }\n                    </div>\n                </div>\n                {hasContent && expanded && (contents instanceof Error ?\n                    <div className=\"uk-alert-danger\">\n                        <p>{contents}</p>\n                    </div>\n                    :\n                    <>\n                        {contents.directories.map(childName => <Directory key={childName} path={`${path}/${childName}`} readOnly={readOnly} />)}\n                        {contents.files.map(childName => <File key={childName} path={`${path}/${childName}`} readOnly={readOnly} />)}\n                        {readOnly ||\n                            <div className=\"uk-flex\">\n                                <div className=\"uk-width-auto\">\n                                    <div className=\"uk-icon-image\"></div>\n                                </div>\n                                <div className=\"uk-width-expand\">\n                                    <div className=\"uk-inline\">\n                                        <span className=\"uk-form-icon\" data-uk-icon=\"plus\"></span>\n                                        <input className=\"uk-input uk-form-small uk-width-1-1\" placeholder={`New ${name} item...`} value={newChildName} onChange={e => setNewChildName(e.target.value)} />\n                                    </div>\n                                </div>\n                                <div className=\"uk-width-auto\">\n                                    <div className=\"uk-button-group\">\n                                        <button className=\"uk-button uk-button-small uk-button-primary uk-padding-remove\" title=\"Create File\" onClick={createFile} disabled={isInvalidName(newChildName)}>\n                                            <span data-uk-icon=\"file-text\"></span>\n                                        </button>\n                                        <button className=\"uk-button uk-button-small uk-button-secondary uk-padding-remove\" title=\"Create Directory\" onClick={createDirectory} disabled={isInvalidName(newChildName)}>\n                                            <span data-uk-icon=\"folder\"></span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport const Browser = () => (\n    <div className=\"uk-text-nowrap\">\n        <Directory path={MonaInputPath} readOnly={false} />\n        <Directory path={MonaOutputPath} readOnly={true} />\n    </div>\n);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '.';\nimport { MonaFileSystem } from './mona';\n\nexport interface Tabs {\n    [path: string]: {\n        readOnly: boolean\n        selected: boolean\n    }\n}\n\nexport class TabsHandler {\n    constructor(private setTabs: (setter: (value: Tabs) => Tabs) => void) { }\n\n    openTab(path: string, readOnly: boolean): void {\n        this.setTabs(tabs => ({\n            ...Object.fromEntries(Object.entries(tabs).map(([path, tab]) => [path, { ...tab, selected: false }])),\n            [path]: { readOnly, selected: true }\n        }));\n    }\n\n    closeTab(path: string): void {\n        this.setTabs(tabs => {\n            const tab = tabs[path];\n            if (tab) {\n                const newTabs = { ...tabs };\n                delete newTabs[path];\n                if (tab.selected) {\n                    const keys = Object.keys(tabs);\n                    const index = keys.indexOf(path);\n                    const selectedPath = (index + 1) < keys.length ? keys[index + 1] : (index - 1) >= 0 ? keys[index - 1] : undefined;\n                    if (selectedPath !== undefined) {\n                        const selectedTab = newTabs[selectedPath];\n                        if (selectedTab) {\n                            newTabs[selectedPath] = { ...selectedTab, selected: true };\n                        }\n                    }\n                }\n                return newTabs;\n            }\n            else {\n                return tabs;\n            }\n        });\n    }\n}\n\nexport const Tab = ({ id, path, selected, readOnly }: {\n    id: string\n    path: string\n    selected: boolean\n    readOnly: boolean\n}) => {\n    const app = useContext(AppContext);\n    const [deleted, setDeleted] = useState(false);\n\n    useEffect(() => {\n        const listener = (contents: string | null) => setDeleted(contents == null);\n        MonaFileSystem.addFileListener(path, listener);\n        MonaFileSystem.isFile(path).then(isFile => setDeleted(!isFile)).catch(console.trace);\n        return () => MonaFileSystem.removeFileListener(path, listener);\n    }, [app, path]);\n\n    return (\n        <li className={selected ? 'uk-active' : ''}>\n            <a href={id} onClick={e => { app.openTab(path, readOnly); e.preventDefault(); }}>\n                <span uk-icon=\"icon: file-text\"></span>\n                <span className=\"uk-margin-small-left uk-margin-small-right\" style={{ textTransform: 'none' }}>{path}{readOnly && ' (read-only)'}{deleted && ' (deleted)'}</span>\n                <button data-uk-close onClick={e => { app.closeTab(path); e.stopPropagation(); }}>\n                </button>\n            </a>\n        </li>\n    );\n};\n","import UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport './../node_modules/uikit/dist/css/uikit.min.css';\nUIkit.use(Icons);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { createContext, useMemo, useReducer } from 'react';\nimport { render } from 'react-dom';\nimport { Browser } from './browser';\nimport { Tab, TabsHandler, Tabs } from './tabs';\nimport './uikitloader.js';\nimport { Workspace } from './workspace';\n\nexport const AppContext = createContext({} as {\n    openTab: (path: string, readOnly: boolean) => void\n    closeTab: (path: string) => void\n});\n\nconst App = () => {\n    const [tabs, setTabs] = useReducer((tabs: Tabs, action: (tabs: Tabs) => Tabs) => {\n        const result = action(tabs);\n        window.localStorage.setItem('tabs', JSON.stringify(result));\n        return result;\n    }, JSON.parse(window.localStorage.getItem('tabs') ?? '{}') as Tabs);\n    const tabHandler = useMemo(() => new TabsHandler(setTabs), []);\n\n    return (\n        <AppContext.Provider value={tabHandler}>\n            <nav className=\"uk-navbar-container uk-navbar-transparent uk-light uk-background-primary\" data-uk-navbar>\n                <div className=\"uk-navbar-left\">\n                    <a className=\"uk-navbar-item uk-logo\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.brics.dk/mona/\">MONA Web</a>\n                </div>\n                <div className=\"uk-navbar-right\">\n                    <div className=\"uk-navbar-item\">\n                        <a className=\"uk-button uk-button-default\" target=\"_blank\" rel=\"noreferrer\" href=\"http://www.brics.dk/mona/mona14.pdf\">Manual</a>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid data-uk-height-viewport=\"offset-top: true\">\n                <div className=\"uk-width-medium\">\n                    <ul className=\"uk-flex-center uk-tab\">\n                        <li className=\"uk-active\"><a href=\"#browser\" onClick={e => e.preventDefault()}><span uk-icon=\"icon: copy\"></span><span className=\"uk-margin-small-left\" style={{ textTransform: 'none' }}>Files</span></a></li>\n                    </ul>\n                    <div id=\"browser\">\n                        <Browser />\n                    </div>\n                </div>\n                <div className=\"uk-width-extend\">\n                    <ul className=\"uk-tab\">\n                        {Object.entries(tabs).map(([path, tab], index) => <Tab key={path} id={`#workspace${index}`} path={path} selected={tab.selected} readOnly={tab.readOnly} />)}\n                    </ul>\n                    <div className=\"uk-margin\">\n                        {Object.entries(tabs).map(([path, tab], index) => <div key={path} id={`workspace${index}`} hidden={!tab.selected}><Workspace id={index} path={path} {...tab} /></div>)}\n                    </div>\n                </div>\n            </div>\n        </AppContext.Provider>\n    );\n};\n\nrender(<App />, document.getElementById('app'));\n"],"sourceRoot":""}