{"version":3,"sources":["mona.ts","workspace.tsx","helpers.ts","browser.tsx","tabs.tsx","uikitloader.js","index.tsx"],"names":["MonaInputPath","MonaOutputPath","LibPath","MonaFileSystem","global","Module","module","fs","FS","mkdir","inputMount","mount","IDBFS","outputMount","Promise","resolve","reject","syncfs","error","analyzePath","exists","ensureModifiable","path","startsWith","length","Error","sync","pull","read","readFile","encoding","write","data","writeFile","unlink","rmdir","node","lookupPath","follow","tryNode","object","isFile","mode","isDirectory","isDir","this","_fs","_fileListeners","listeners","isOutputPath","notifyListenersDirect","_directoryListeners","getDirectoryContents","ensureNotExists","notifyFileListeners","notifyParentDirectoryListeners","contents","created","listener","addListener","removeListener","notifyListeners","entries","Object","filter","predicate","map","name","sort","directories","files","notifyDirectoryListeners","isSpecialDirectory","lastSeparator","lastIndexOf","substring","listenersForPath","get","add","set","Set","delete","size","listenersDirect","forEach","console","trace","buildFileSystem","Map","MonaRuntime","worker","Worker","onerror","e","stop","message","lineno","colno","onmessageerror","finishTask","id","task","onmessage","refresh","catch","terminate","cb","_tasks","assert","notifyRunListeners","isRunning","_runListeners","runListener","_nextId","_worker","postMessage","reason","createWorker","destroyWorker","tasks","values","clear","MonacoEnvironment","getWorkerUrl","_moduleId","_label","begin","_","value","end","callback","setContents","doRun","saving","running","handleError","a","reschedule","setTimeout","stale","saved","String","result","run","currentContents","Proxy","Workspace","readOnly","editorDiv","useRef","graphDiv","useState","errors","setErrors","currentTab","setCurrentTab","autoSave","setAutoSave","autoRun","setAutoRun","setSaving","setRunning","isTab","tab","tabAttributes","toLowerCase","hidden","TextArea","className","style","fontFamily","join","Link","children","href","onClick","appendError","concat","callbackWrapper","useEffect","timeout","clearTimeout","div","current","graph","dfa","element","DOMParser","parseFromString","documentElement","appendChild","removeChild","editor","monaco","create","automaticLayout","onDidChangeModelContent","getValue","isFlush","isFirstSet","setContentsAndClose","view","saveViewState","setValue","restoreViewState","addFileListener","then","removeFileListener","dispose","ref","disabled","title","type","checked","onChange","target","visibility","satisfyingExample","counterExample","confirm","UIkit","modal","window","alert","isInvalidName","includes","getName","File","app","useContext","AppContext","deleteFile","textTransform","openTab","Directory","isSpecial","expanded","setExpanded","newChildName","setNewChildName","hasContent","addDirectoryListener","enumDirectory","removeDirectoryListener","toggleExpanded","createFile","childPath","createDirectory","deleteDirectory","cursor","childName","placeholder","Browser","TabsHandler","setTabs","tabs","fromEntries","selected","newTabs","keys","index","indexOf","selectedPath","undefined","selectedTab","Tab","deleted","setDeleted","closeTab","stopPropagation","use","Icons","createContext","App","tabHandler","useMemo","Provider","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf99ce9.chunk.js","sourcesContent":["/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nexport const MonaInputPath = '/input';\nexport const MonaOutputPath = '/output';\nconst LibPath = `${MonaInputPath}/lib`;\n\nexport interface MonaDirectoryContents {\n    directories: string[]\n    files: string[]\n}\n\ninterface Node {\n    mode: number\n    contents: {\n        [name: string]: Node\n    }\n}\n\ninterface FileSystem {\n    sync: () => Promise<void>\n    pull: () => Promise<void>\n    read: (path: string) => string\n    write: (path: string, data: string) => void\n    unlink: (path: string) => void\n    mkdir: (path: string) => void\n    rmdir: (path: string) => void\n    node: (path: string) => Node\n    tryNode: (path: string) => Node | null\n    isFile: (node: Node) => boolean\n    isDirectory: (node: Node) => boolean\n}\n\nexport type MonaFileListener = (contents: string | null) => void\n\nexport type MonaDirectoryListener = (contents: MonaDirectoryContents) => void\n\nexport class MonaFileSystem {\n    private static readonly _fs = this.buildFileSystem();\n    private static readonly _fileListeners = new Map<string, Set<MonaFileListener>>();\n    private static readonly _directoryListeners = new Map<string, Set<MonaDirectoryListener>>();\n\n    private static async buildFileSystem(): Promise<FileSystem> {\n        // any-thing goes in this method, so be careful\n        const module = await (global as any).Module();\n        const fs = module.FS;\n        fs.mkdir(MonaInputPath);\n        fs.mkdir(MonaOutputPath);\n        const inputMount = fs.mount(module.IDBFS, {}, MonaInputPath);\n        const outputMount = fs.mount(module.IDBFS, {}, MonaOutputPath);\n        await new Promise<void>((resolve, reject) => fs.syncfs(true, (error: any) => error ? reject(error) : resolve()));\n        if (!fs.analyzePath(LibPath).exists) {\n            fs.mkdir(LibPath);\n        }\n        const ensureModifiable = (path: string) => {\n            if (path.startsWith(MonaOutputPath) && (path.length === MonaOutputPath.length || path[MonaOutputPath.length] === '/')) {\n                throw new Error(`Path '${path}' is not modifiable.`);\n            }\n            return path;\n        };\n        return {\n            sync: () => new Promise<void>((resolve, reject) => module.IDBFS.syncfs(inputMount.mount, false, (error: any) => error ? reject(error) : resolve())),\n            pull: () => new Promise<void>((resolve, reject) => module.IDBFS.syncfs(outputMount.mount, true, (error: any) => error ? reject(error) : resolve())),\n            read: (path) => fs.readFile(path, { encoding: 'utf8' }),\n            write: (path, data) => fs.writeFile(ensureModifiable(path), data),\n            unlink: (path) => fs.unlink(ensureModifiable(path)),\n            mkdir: (path) => fs.mkdir(ensureModifiable(path)),\n            rmdir: (path) => fs.rmdir(ensureModifiable(path)),\n            node: (path) => fs.lookupPath(path, { follow: true }).node,\n            tryNode: (path) => fs.analyzePath(path, false).object,\n            isFile: (node) => fs.isFile(node.mode),\n            isDirectory: (node) => fs.isDir(node.mode),\n        };\n    }\n\n    static isOutputPath(path: string): boolean {\n        return path.startsWith(MonaOutputPath) && (path.length === MonaOutputPath.length || path[MonaOutputPath.length] === '/');\n    }\n\n    static async refresh(): Promise<void> {\n        const fs = await this._fs;\n        await fs.pull();\n        for (const [path, listeners] of this._fileListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                this.notifyListenersDirect(listeners, node && fs.isFile(node) ? fs.read(path) : null);\n            }\n        }\n        for (const [path, listeners] of this._directoryListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                if (node && fs.isDirectory(node)) {\n                    this.notifyListenersDirect(listeners, this.getDirectoryContents(fs, path));\n                }\n            }\n        }\n    }\n\n    private static ensureNotExists(fs: FileSystem, path: string): void {\n        if (fs.tryNode(path)) {\n            throw new Error(`A node at path '${path}' already exists.`)\n        }\n    }\n\n    //\n    //  Files\n    //\n\n    static async isFile(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isFile(node);\n    }\n\n    static async createFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        fs.write(path, '');\n        await fs.sync();\n        this.notifyFileListeners(path, '');\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async readFile(path: string): Promise<string> {\n        const fs = await this._fs;\n        return fs.read(path);\n    }\n\n    static async writeFile(path: string, contents: string): Promise<void> {\n        const fs = await this._fs;\n        const created = fs.tryNode(path) == null;\n        fs.write(path, contents);\n        await fs.sync();\n        this.notifyFileListeners(path, contents);\n        if (created) {\n            this.notifyParentDirectoryListeners(fs, path);\n        }\n    }\n\n    static async deleteFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        fs.unlink(path);\n        await fs.sync();\n        this.notifyFileListeners(path, null);\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addFileListener(path: string, listener: MonaFileListener): void {\n        this.addListener(this._fileListeners, path, listener);\n    }\n\n    static removeFileListener(path: string, listener: MonaFileListener): void {\n        this.removeListener(this._fileListeners, path, listener);\n    }\n\n    private static notifyFileListeners(path: string, contents: string | null): void {\n        this.notifyListeners(this._fileListeners, path, contents);\n    }\n\n    //\n    // Directories\n    //\n\n    private static getDirectoryContents(fs: FileSystem, path: string): MonaDirectoryContents {\n        const entries = Object.entries(fs.node(path).contents);\n        const filter = (predicate: (node: Node) => boolean): string[] => entries.filter(([_, node]) => predicate(node)).map(([name, _]) => name).sort();\n        return {\n            directories: filter(node => fs.isDirectory(node)),\n            files: filter(node => fs.isFile(node)),\n        };\n    }\n\n    static isSpecialDirectory(path: string): boolean {\n        return path === MonaInputPath || path === LibPath;\n    }\n\n    static async isDirectory(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isDirectory(node);\n    }\n\n    static async createDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        fs.mkdir(path);\n        await fs.sync();\n        this.notifyDirectoryListeners(path, { directories: [], files: [] });\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async enumDirectory(path: string): Promise<MonaDirectoryContents> {\n        const fs = await this._fs;\n        return this.getDirectoryContents(fs, path);\n    }\n\n    static async deleteDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        if (this.isSpecialDirectory(path)) {\n            throw new Error(`Cannot delete special directory '${path}'.`);\n        }\n        fs.rmdir(path);\n        await fs.sync();\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.addListener(this._directoryListeners, path, listener);\n    }\n\n    static removeDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.removeListener(this._directoryListeners, path, listener);\n    }\n\n    private static notifyDirectoryListeners(path: string, contents: MonaDirectoryContents): void {\n        this.notifyListeners(this._directoryListeners, path, contents);\n    }\n\n    private static notifyParentDirectoryListeners(fs: FileSystem, path: string): void {\n        const lastSeparator = path.lastIndexOf('/');\n        if (lastSeparator > -1) {\n            path = path.substring(0, lastSeparator);\n            this.notifyDirectoryListeners(path, this.getDirectoryContents(fs, path));\n        }\n    }\n\n    //\n    // Listeners\n    //\n\n    private static addListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath) {\n            listenersForPath.add(listener);\n        }\n        else {\n            listeners.set(path, new Set([listener]));\n        }\n    }\n\n    private static removeListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath && listenersForPath.delete(listener) && listenersForPath.size === 0) {\n            listeners.delete(path);\n        }\n    }\n\n    private static notifyListeners<T>(listeners: Map<string, Set<(contents: T) => void>>, path: string, contents: T): void {\n        const listenersDirect = listeners.get(path);\n        if (listenersDirect) {\n            this.notifyListenersDirect(listenersDirect, contents);\n        };\n    }\n\n    private static notifyListenersDirect<T>(listeners: Set<(contents: T) => void>, contents: T): void {\n        listeners.forEach(listener => {\n            try { listener(contents); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n\nexport interface MonaData {\n    id: number\n    dfa?: {\n        freeVariables: string[]\n        transitions: {\n            [from: string]: {\n                [input: string]: string[]\n            }\n        }\n        initialState?: string\n        acceptingStates?: string[]\n        rejectingStates?: string[]\n        dontCareStates?: string[]\n        graph: string\n    }\n    counterExample?: string[]\n    satisfyingExample?: string[]\n    timings?: {\n        [label: string]: number\n    }\n}\n\nexport type MonaRunListener = (isRunning: boolean) => void\n\ninterface Task {\n    resolve: (value: MonaData | PromiseLike<MonaData>) => void\n    reject: (reason: any) => void\n}\n\nexport class MonaRuntime {\n    private static _worker = this.createWorker();\n    private static readonly _tasks = new Map<number, Task>();\n    private static readonly _runListeners = new Set<MonaRunListener>()\n    private static _nextId = 0;\n\n    private static createWorker(): Worker {\n        const worker = new Worker('/MONA-WEB/static/js/worker.js', { name: 'Mona' });\n        worker.onerror = e => this.stop(`Error in worker: ${e.message} (${e.lineno}:${e.colno})`);\n        worker.onmessageerror = e => this.finishTask(e.data.id, task => task.reject('Failed to deserialize worker message.'));\n        worker.onmessage = e => this.finishTask(e.data.id, task => {\n            MonaFileSystem.refresh().catch(error => console.trace(error));\n            if (e.data.error) {\n                task.reject(e.data.error);\n            }\n            else {\n                task.resolve(e.data);\n            }\n        });\n        return worker;\n    }\n\n    private static destroyWorker(worker: Worker): void {\n        worker.terminate();\n        worker.onerror = null;\n        worker.onmessageerror = null;\n        worker.onmessage = null;\n    }\n\n    private static finishTask(id: number, cb: (task: Task) => void): void {\n        const task = this._tasks.get(id);\n        if (task) {\n            console.assert(this._tasks.delete(id));\n            if (this._tasks.size === 0) {\n                this.notifyRunListeners(false);\n            }\n            try { cb(task); }\n            catch (error) { console.trace(error); }\n        }\n    }\n\n    private static notifyRunListeners(isRunning: boolean): void {\n        this._runListeners.forEach(runListener => {\n            try { runListener(isRunning); }\n            catch (error) { console.trace(error); }\n        });\n    }\n\n    static addRunListener(listener: MonaRunListener): void {\n        this._runListeners.add(listener);\n    }\n\n    static removeRunListener(listener: MonaRunListener): void {\n        this._runListeners.delete(listener);\n    }\n\n    static run(path: string): Promise<MonaData> {\n        return new Promise<MonaData>((resolve, reject) => {\n            const id = ++this._nextId;\n            this._tasks.set(id, { resolve, reject });\n            if (this._tasks.size === 1) {\n                this.notifyRunListeners(true);\n            }\n            try { this._worker.postMessage({ id, path }); }\n            catch (error) { this.finishTask(id, task => task.reject(error)); }\n        });\n    }\n\n    static stop(reason: any): void {\n        const worker = this._worker;\n        this._worker = this.createWorker();\n        this.destroyWorker(worker);\n        const tasks = [...this._tasks.values()];\n        this._tasks.clear();\n        this.notifyRunListeners(false);\n        tasks.forEach(task => {\n            try { task.reject(reason); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport * as monaco from 'monaco-editor';\nimport { useEffect, useRef, useState } from 'react';\nimport { MonaData, MonaFileSystem, MonaRuntime } from './mona';\n\n// @ts-ignore\nglobal.MonacoEnvironment = { getWorkerUrl: (_moduleId: any, _label: string) => '/MONA-WEB/static/js/editor.worker.js' };\n\ninterface Contents {\n    path: string\n    data: string | null\n    saved: boolean\n    result: MonaData | null\n    stale: boolean\n}\n\nconst begin = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<boolean>((resolve, _) => cb(value => {\n    resolve(!value);\n    return true;\n}));\n\nconst end = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<void>((resolve, _) => cb(value => {\n    resolve();\n    if (!value) {\n        console.trace('Value already cleared.');\n    }\n    return false;\n}));\n\nconst callback = async (\n    contents: Contents,\n    setContents: (setter: (value: Contents) => Contents) => void,\n    doRun: boolean,\n    saving: (setter: (value: boolean) => boolean) => void,\n    running: (setter: (value: boolean) => boolean) => void,\n    handleError: (message: string) => void\n) => {\n    const reschedule = () => setTimeout(() => callback(contents, setContents, doRun, saving, running, handleError), 500);\n\n    if (!contents.stale && !contents.saved) {\n        if (!await begin(saving)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            if (!contents.saved && contents.data) {\n                await MonaFileSystem.writeFile(contents.path, contents.data);\n            }\n            contents.saved = true;\n        }\n        catch (error) {\n            handleError(`Failed to save file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(saving);\n        }\n    }\n\n    if (!contents.stale && !contents.result && doRun) {\n        if (!await begin(running)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            contents.result ??= await MonaRuntime.run(contents.path);\n        }\n        catch (error) {\n            handleError(`Failed to run file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(running);\n        }\n    }\n\n    if (!contents.stale) {\n        setContents(currentContents => contents.stale ? currentContents : new Proxy(contents, {}))\n    }\n};\n\nexport const Workspace = ({ id, path, readOnly }: {\n    id: number\n    path: string\n    readOnly: boolean\n}) => {\n    type Tab = 'Errors' | 'Graph' | 'SatisfyingExample' | 'CounterExample'\n\n    const editorDiv = useRef<HTMLDivElement>(null);\n    const graphDiv = useRef<HTMLDivElement>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const [currentTab, setCurrentTab] = useState<Tab>('Errors');\n    const [contents, setContents] = useState<Contents>({ path, data: null, saved: true, result: null, stale: false });\n    const [autoSave, setAutoSave] = useState(true);\n    const [autoRun, setAutoRun] = useState(true);\n    const [saving, setSaving] = useState(false);\n    const [running, setRunning] = useState(false);\n\n    const isTab = (tab: Tab) => contents.result ? currentTab === tab : tab === 'Errors';\n\n    const tabAttributes = (tab: Tab) => ({\n        id: `${tab.toLowerCase()}${id}`,\n        hidden: !isTab(tab),\n        'data-uk-height-viewport': `offset-top: true; offset-bottom: #tabs${id}`\n    });\n\n    const TextArea = ({ tab, values }: {\n        tab: Tab\n        values: string[] | undefined\n    }) => (\n        <textarea {...tabAttributes(tab)} className=\"uk-textarea uk-width-1-1\" style={{ fontFamily: 'monospace' }} readOnly={true} value={values?.join('\\n') ?? ''} />\n    );\n\n    const Link = ({ tab, children }: {\n        tab: Tab\n        children: string\n    }) => (\n        <li className={isTab(tab) ? 'uk-active' : tab === currentTab ? 'uk-disable' : ''}>\n            <a href={`${tab.toLowerCase()}${id}`} onClick={() => setCurrentTab(tab)}>{children}</a>\n        </li>\n    );\n\n    const appendError = (message: string) => {\n        setErrors(errors => errors.concat([message]));\n        setCurrentTab('Errors');\n    };\n\n    const callbackWrapper = (doRun: boolean) => callback(contents, setContents, doRun, setSaving, setRunning, appendError);\n\n    useEffect(() => {\n        if (!autoSave) {\n            setAutoRun(false);\n        }\n    }, [autoSave]);\n\n    useEffect(() => {\n        if (autoRun) {\n            setAutoSave(true);\n        }\n    }, [autoRun]);\n\n    useEffect(() => {\n        if (!autoSave && !autoRun) {\n            return;\n        }\n        const timeout = setTimeout(() => callback(contents, setContents, autoRun, setSaving, setRunning, appendError), 500);\n        return () => clearTimeout(timeout);\n    }, [contents, autoSave, autoRun]);\n\n    useEffect(() => {\n        const div = graphDiv.current;\n        if (!div) {\n            appendError('Graph DIV not found.');\n            return;\n        }\n        const graph = contents.result?.dfa?.graph;\n        if (!graph) {\n            return;\n        }\n        try {\n            const element = new DOMParser().parseFromString(graph, 'image/svg+xml').documentElement;\n            div.appendChild(element);\n            return () => { div.removeChild(element); }\n        }\n        catch (error) {\n            appendError(`Cannot render file: ${String(error)}`);\n            return;\n        }\n    }, [contents]);\n\n    useEffect(() => {\n        if (!editorDiv.current) {\n            appendError('Editor DIV not found.');\n            return;\n        }\n        const editor = monaco.editor.create(editorDiv.current, {\n            readOnly: readOnly,\n            automaticLayout: true\n        });\n        if (!readOnly) {\n            editor.onDidChangeModelContent(e => {\n                setContents(contents => {\n                    contents.stale = true;\n                    return {\n                        path,\n                        data: editor.getValue(),\n                        saved: e.isFlush,\n                        result: null,\n                        stale: false,\n                    }\n                });\n                setErrors([]);\n            });\n        }\n\n        let isFirstSet = true;\n        const setContentsAndClose = (contents: string | null) => {\n            if (contents != null && (readOnly || isFirstSet)) {\n                isFirstSet = false;\n                const view = editor.saveViewState();\n                editor.setValue(contents);\n                if (view) {\n                    editor.restoreViewState(view);\n                }\n            }\n        };\n        MonaFileSystem.addFileListener(path, setContentsAndClose);\n        MonaFileSystem.readFile(path)\n            .then(setContentsAndClose)\n            .catch(reason => appendError(`Failed to read file: ${String(reason)}`));\n\n        return () => {\n            MonaFileSystem.removeFileListener(path, setContentsAndClose);\n            editor.dispose();\n        }\n    }, [path, readOnly]);\n\n    return (\n        <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid>\n            <div className=\"uk-width-1-2\">\n                <div ref={editorDiv} data-uk-height-viewport=\"offset-top: true; offset-bottom: true\"></div>\n                <nav className=\"uk-flex uk-flex-bottom uk-navbar-container\" data-uk-navbar>\n                    <div className=\"uk-navbar-left\">\n                        <div className=\"uk-navbar-item\">\n                            <button className=\"uk-button uk-button-default\" disabled={contents.saved || saving} title=\"Save File\" onClick={() => callbackWrapper(false)}><span data-uk-icon=\"database\"></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoSave} onChange={e => setAutoSave(e.target.checked)} /> Auto-Save</label>\n                            <div data-uk-spinner style={{ visibility: saving ? 'visible' : 'hidden' }}></div>\n                        </div>\n                        <div className=\"uk-navbar-item\">\n                            <button className={`uk-button uk-button-${running ? 'danger' : 'primary'}`} disabled={!!contents.result} title={running ? 'Abort Run' : 'Run File'} onClick={() => running ? MonaRuntime.stop('Cancelled by user.') : callbackWrapper(true)}><span data-uk-icon={running ? 'bolt' : 'play'}></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoRun} onChange={e => setAutoRun(e.target.checked)} /> Auto-Run</label>\n                            <div data-uk-spinner style={{ visibility: running ? 'visible' : 'hidden' }}></div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n            <div className=\"uk-width-1-2\">\n                <TextArea tab=\"Errors\" values={errors} />\n                <div {...tabAttributes('Graph')}>\n                    <div ref={graphDiv}></div>\n                </div>\n                <TextArea tab=\"SatisfyingExample\" values={contents.result?.satisfyingExample} />\n                <TextArea tab=\"CounterExample\" values={contents.result?.counterExample} />\n                <div id={`tabs${id}`}>\n                    <ul className=\"uk-tab-bottom\" data-uk-tab>\n                        <Link tab=\"Errors\">Errors</Link>\n                        <Link tab=\"Graph\">Graph</Link>\n                        <Link tab=\"SatisfyingExample\">Satisfying Example</Link>\n                        <Link tab=\"CounterExample\">Counter-Example</Link>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport UIkit from 'uikit';\n\nexport async function prompt(message: string): Promise<string | null> {\n    try {\n        return await UIkit.modal.prompt(message, '');\n    } catch {\n        return window.prompt(message);\n    }\n}\n\nexport async function confirm(message: string): Promise<boolean> {\n    try {\n        await UIkit.modal.confirm(message);\n        return true;\n    } catch (error) {\n        return error ? window.confirm(message) : false;\n    }\n}\n\nexport async function alert(message: string): Promise<void> {\n    try {\n        await UIkit.modal.alert(message);\n    } catch {\n        window.alert(message);\n    }\n}\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '.';\nimport { alert, confirm } from './helpers';\nimport { MonaDirectoryContents, MonaFileSystem, MonaInputPath, MonaOutputPath } from './mona';\n\nconst isInvalidName = (name: string) => name.length === 0 || name.includes('/');\n\nconst getName = (path: string) => path.substring(path.lastIndexOf('/') + 1);\n\nconst File = ({ path, readOnly }: { path: string, readOnly: boolean }) => {\n    const app = useContext(AppContext);\n    const name = getName(path);\n\n    const openFile = () => app.openTab(path, readOnly);\n\n    const deleteFile = async () => {\n        if (await confirm(`Are you sure you want to delete the file '${path}'?`)) {\n            try { await MonaFileSystem.deleteFile(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\"></div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <button className=\"uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-default\" style={{ textTransform: 'none' }} title=\"Open File\" onClick={openFile}>\n                    <span data-uk-icon=\"file-text\"></span> {name}\n                </button>\n            </div>\n            <div className=\"uk-width-auto\">\n                {readOnly ||\n                    <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete File\" onClick={deleteFile}>\n                        <span data-uk-icon=\"close\"></span>\n                    </button>\n                }\n            </div>\n        </div>\n    );\n}\n\nconst Directory = ({ path, readOnly }: { path: string, readOnly: boolean }) => {\n    const app = useContext(AppContext);\n    const isSpecial = MonaFileSystem.isSpecialDirectory(path);\n    const [contents, setContents] = useState<MonaDirectoryContents | null | Error>(null);\n    const [expanded, setExpanded] = useState<boolean>(isSpecial);\n    const [newChildName, setNewChildName] = useState<string>('');\n\n    const name = getName(path);\n    const hasContent = contents && (contents instanceof Error || contents.directories.length > 0 || contents.files.length > 0 || !readOnly);\n\n    useEffect(() => {\n        MonaFileSystem.addDirectoryListener(path, setContents);\n        MonaFileSystem.enumDirectory(path).then(setContents).catch(reason => setContents(new Error(String(reason))));\n        return () => MonaFileSystem.removeDirectoryListener(path, setContents);\n    }, [path]);\n\n    const toggleExpanded = () => setExpanded(expanded => !expanded);\n\n    const createFile = async () => {\n        const childPath = `${path}/${newChildName}`;\n        try { await MonaFileSystem.createFile(childPath); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n        app.openTab(childPath, readOnly);\n    }\n\n    const createDirectory = async () => {\n        try { await MonaFileSystem.createDirectory(`${path}/${newChildName}`); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n    }\n\n    const deleteDirectory = async () => {\n        if (contents && !(contents instanceof Error) && (contents.directories.length > 0 || contents.files.length > 0)) {\n            await alert(`The directory '${path}' is not empty.`);\n        }\n        else if (await confirm(`Are you sure you want to delete the folder '${path}'?`)) {\n            try { await MonaFileSystem.deleteDirectory(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\">\n                    {hasContent && <span data-uk-icon={expanded ? 'chevron-down' : 'chevron-right'} style={{ cursor: 'pointer' }} onClick={toggleExpanded}></span>}\n                </div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <div className=\"uk-flex\">\n                    <div className=\"uk-width-expand\">\n                        <button className={`uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-${isSpecial ? 'primary' : 'secondary'}`} title={`${hasContent ? (expanded ? 'Collapse' : 'Expand') : 'Empty'} Folder`} style={{ textTransform: 'none' }} onClick={toggleExpanded} disabled={!hasContent}>\n                            <span data-uk-icon=\"folder\"></span><span className=\"uk-margin-small-left uk-margin-small-right\">{name}</span>{!contents && <div data-uk-spinner=\"ratio: 0.5\"></div>}\n                        </button>\n                    </div>\n                    <div className=\"uk-width-auto\">\n                        {readOnly || isSpecial ||\n                            <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete Folder\" onClick={deleteDirectory}>\n                                <span data-uk-icon=\"close\"></span>\n                            </button>\n                        }\n                    </div>\n                </div>\n                {hasContent && expanded && (contents instanceof Error ?\n                    <div className=\"uk-alert-danger\">\n                        <p>{contents}</p>\n                    </div>\n                    :\n                    <>\n                        {contents.directories.map(childName => <Directory key={childName} path={`${path}/${childName}`} readOnly={readOnly} />)}\n                        {contents.files.map(childName => <File key={childName} path={`${path}/${childName}`} readOnly={readOnly} />)}\n                        {readOnly ||\n                            <div className=\"uk-flex\">\n                                <div className=\"uk-width-auto\">\n                                    <div className=\"uk-icon-image\"></div>\n                                </div>\n                                <div className=\"uk-width-expand\">\n                                    <div className=\"uk-inline\">\n                                        <span className=\"uk-form-icon\" data-uk-icon=\"plus\"></span>\n                                        <input className=\"uk-input uk-form-small uk-width-1-1\" placeholder={`New ${name} item...`} value={newChildName} onChange={e => setNewChildName(e.target.value)} />\n                                    </div>\n                                </div>\n                                <div className=\"uk-width-auto\">\n                                    <div className=\"uk-button-group\">\n                                        <button className=\"uk-button uk-button-small uk-button-primary uk-padding-remove\" title=\"Create File\" onClick={createFile} disabled={isInvalidName(newChildName)}>\n                                            <span data-uk-icon=\"file-text\"></span>\n                                        </button>\n                                        <button className=\"uk-button uk-button-small uk-button-secondary uk-padding-remove\" title=\"Create Directory\" onClick={createDirectory} disabled={isInvalidName(newChildName)}>\n                                            <span data-uk-icon=\"folder\"></span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport const Browser = () => (\n    <div className=\"uk-text-nowrap\">\n        <Directory path={MonaInputPath} readOnly={false} />\n        <Directory path={MonaOutputPath} readOnly={true} />\n    </div>\n);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '.';\nimport { MonaFileSystem } from './mona';\n\nexport interface Tabs {\n    [path: string]: {\n        readOnly: boolean\n        selected: boolean\n    }\n}\n\nexport class TabsHandler {\n    constructor(private setTabs: (setter: (value: Tabs) => Tabs) => void) { }\n\n    openTab(path: string, readOnly: boolean): void {\n        this.setTabs(tabs => ({\n            ...Object.fromEntries(Object.entries(tabs).map(([path, tab]) => [path, { ...tab, selected: false }])),\n            [path]: { readOnly, selected: true }\n        }));\n    }\n\n    closeTab(path: string): void {\n        this.setTabs(tabs => {\n            const tab = tabs[path];\n            if (tab) {\n                const newTabs = { ...tabs };\n                delete newTabs[path];\n                if (tab.selected) {\n                    const keys = Object.keys(tabs);\n                    const index = keys.indexOf(path);\n                    const selectedPath = (index + 1) < keys.length ? keys[index + 1] : (index - 1) >= 0 ? keys[index - 1] : undefined;\n                    if (selectedPath !== undefined) {\n                        const selectedTab = newTabs[selectedPath];\n                        if (selectedTab) {\n                            newTabs[selectedPath] = { ...selectedTab, selected: true };\n                        }\n                    }\n                }\n                return newTabs;\n            }\n            else {\n                return tabs;\n            }\n        });\n    }\n}\n\nexport const Tab = ({ id, path, selected, readOnly }: {\n    id: string\n    path: string\n    selected: boolean\n    readOnly: boolean\n}) => {\n    const app = useContext(AppContext);\n    const [deleted, setDeleted] = useState(false);\n\n    useEffect(() => {\n        const listener = (contents: string | null) => setDeleted(contents == null);\n        MonaFileSystem.addFileListener(path, listener);\n        MonaFileSystem.isFile(path).then(isFile => setDeleted(!isFile)).catch(console.trace);\n        return () => MonaFileSystem.removeFileListener(path, listener);\n    }, [app, path]);\n\n    return (\n        <li className={selected ? 'uk-active' : ''}>\n            <a href={id} onClick={() => app.openTab(path, readOnly)}>\n                <span uk-icon=\"icon: file-text\"></span>\n                <span className=\"uk-margin-small-left uk-margin-small-right\" style={{ textTransform: 'none' }}>{path}{readOnly && ' (read-only)'}{deleted && ' (deleted)'}</span>\n                <button data-uk-close onClick={e => { app.closeTab(path); e.stopPropagation(); }}>\n                </button>\n            </a>\n        </li>\n    );\n};\n","import UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport './../node_modules/uikit/dist/css/uikit.min.css';\nUIkit.use(Icons);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { createContext, useMemo, useState } from 'react';\nimport { render } from 'react-dom';\nimport { Browser } from './browser';\nimport { Tab, TabsHandler, Tabs } from './tabs';\nimport './uikitloader.js';\nimport { Workspace } from './workspace';\n\nexport const AppContext = createContext({} as {\n    openTab: (path: string, readOnly: boolean) => void\n    closeTab: (path: string) => void\n});\n\nconst App = () => {\n    const [tabs, setTabs] = useState<Tabs>({});\n    const tabHandler = useMemo(() => new TabsHandler(setTabs), []);\n\n    return (\n        <AppContext.Provider value={tabHandler}>\n            <nav className=\"uk-navbar-container uk-navbar-transparent uk-light uk-background-primary\" data-uk-navbar>\n                <div className=\"uk-navbar-left\">\n                    <a className=\"uk-navbar-item uk-logo\" href=\"https://www.brics.dk/mona/\">MONA Web</a>\n                </div>\n                <div className=\"uk-navbar-right\">\n                    <div className=\"uk-navbar-item\">\n                        <a className=\"uk-button uk-button-default\" href=\"http://www.brics.dk/mona/mona14.pdf\">Manual</a>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid data-uk-height-viewport=\"offset-top: true\">\n                <div className=\"uk-width-medium\">\n                    <ul className=\"uk-flex-center\" data-uk-tab>\n                        <li className=\"uk-active\"><a href=\"#browser\"><span uk-icon=\"icon: copy\"></span><span className=\"uk-margin-small-left\" style={{ textTransform: 'none' }}>Files</span></a></li>\n                    </ul>\n                    <div id=\"browser\">\n                        <Browser />\n                    </div>\n                </div>\n                <div className=\"uk-width-extend\">\n                    <ul data-uk-tab>\n                        {Object.entries(tabs).map(([path, tab], index) => <Tab key={path} id={`#workspace${index}`} path={path} selected={tab.selected} readOnly={tab.readOnly} />)}\n                    </ul>\n                    <div className=\"uk-margin\">\n                        {Object.entries(tabs).map(([path, tab], index) => <div key={path} id={`workspace${index}`} hidden={!tab.selected}><Workspace id={index} path={path} readOnly={tab.readOnly} /></div>)}\n                    </div>\n                </div>\n            </div>\n        </AppContext.Provider>\n    );\n};\n\nrender(<App />, document.getElementById('app'));\n"],"sourceRoot":""}