{"version":3,"sources":["workspace.tsx","helpers.ts","browser.tsx","tabs.tsx","uikitloader.js","index.tsx","mona.ts"],"names":["global","MonacoEnvironment","getWorkerUrl","_moduleId","_label","begin","cb","Promise","resolve","_","value","end","console","trace","callback","contents","setContents","doRun","saving","running","handleError","a","reschedule","setTimeout","stale","saved","MonaFileSystem","writeFile","path","data","String","ran","MonaRuntime","run","startsWith","result","currentContents","Proxy","WorkspaceContext","createContext","isCurrentTab","context","tab","visible","hasResult","currentTab","viewportHeightIfTab","id","tabAttributes","toLowerCase","hidden","TextArea","values","useContext","className","style","fontFamily","readOnly","join","Link","children","href","onClick","e","setCurrentTab","preventDefault","Workspace","selected","editorDiv","useRef","graphDiv","useState","errors","setErrors","autoSave","setAutoSave","autoRun","setAutoRun","setSaving","setRunning","scale","setScale","useMemo","appendError","message","concat","callbackWrapper","useEffect","timeout","clearTimeout","div","current","graph","dfa","element","DOMParser","parseFromString","documentElement","nodeName","document","createElement","innerText","transformOrigin","transform","appendChild","removeChild","error","editor","monaco","create","automaticLayout","onDidChangeModelContent","getValue","isFlush","length","isFirstSet","setContentsAndClose","view","saveViewState","setValue","restoreViewState","addFileListener","readFile","then","catch","reason","removeFileListener","dispose","ref","disabled","title","type","checked","onChange","target","visibility","stop","Provider","min","max","step","parseFloat","satisfyingExample","counterExample","confirm","UIkit","modal","window","alert","isInvalidName","name","includes","getName","substring","lastIndexOf","File","isOutput","app","AppContext","deleteFile","textTransform","openTab","Directory","isRoot","useReducer","state","localStorage","setItem","JSON","stringify","parse","getItem","expanded","toggleExpanded","newChildName","setNewChildName","addDirectoryListener","enumDirectory","Error","removeDirectoryListener","createFile","childPath","createDirectory","deleteDirectory","directories","files","cursor","map","childName","placeholder","Browser","MonaInputPath","MonaOutputPath","TabsHandler","setTabs","this","tabs","Object","fromEntries","entries","newTabs","keys","index","indexOf","selectedPath","undefined","selectedTab","Tab","deleted","setDeleted","listener","isFile","closeTab","stopPropagation","use","Icons","createSampleOnFirstRun","isDirectoryEmpty","exampleFileName","App","action","tabHandler","rel","render","getElementById","MonaModule","module","fs","FS","mkdir","inputMount","mount","IDBFS","outputMount","reject","syncfs","modify","op","isOutputPath","isIdle","pull","read","encoding","write","unlink","rmdir","node","lookupPath","follow","tryNode","analyzePath","object","mode","isDirectory","isDir","_fs","_fileListeners","listeners","notifyListenersDirect","_directoryListeners","getDirectoryContents","ensureNotExists","notifyFileListeners","notifyParentDirectoryListeners","created","addListener","removeListener","notifyListeners","filter","predicate","sort","notifyDirectoryListeners","lastSeparator","listenersForPath","get","add","set","Set","delete","size","listenersDirect","forEach","buildFileSystem","Map","worker","Worker","onerror","lineno","colno","onmessageerror","finishTask","task","onmessage","refresh","terminate","_tasks","assert","notifyRunListeners","isRunning","_runListeners","runListener","_nextId","_worker","postMessage","createWorker","destroyWorker","tasks","clear"],"mappings":"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","file":"static/js/main.5ead0057.chunk.js","sourcesContent":["/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport * as monaco from 'monaco-editor';\nimport { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { MonaData, MonaFileSystem, MonaRuntime } from './mona';\n\n// @ts-ignore\nglobal.MonacoEnvironment = { getWorkerUrl: (_moduleId: any, _label: string) => '/MONA-WEB/static/js/editor.worker.js' };\n\ninterface Contents {\n    path: string\n    data: string\n    saved: boolean\n    ran: boolean\n    result: MonaData | null\n    stale: boolean\n}\n\nconst begin = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<boolean>((resolve, _) => cb(value => {\n    resolve(!value);\n    return true;\n}));\n\nconst end = (cb: (setter: (value: boolean) => boolean) => void) => new Promise<void>((resolve, _) => cb(value => {\n    resolve();\n    if (!value) {\n        console.trace('Value already cleared.');\n    }\n    return false;\n}));\n\nconst callback = async (\n    contents: Contents,\n    setContents: (setter: (value: Contents) => Contents) => void,\n    doRun: boolean,\n    saving: (setter: (value: boolean) => boolean) => void,\n    running: (setter: (value: boolean) => boolean) => void,\n    handleError: (message: string) => void\n) => {\n    const reschedule = () => setTimeout(() => callback(contents, setContents, doRun, saving, running, handleError), 500);\n\n    if (!contents.stale && !contents.saved) {\n        if (!await begin(saving)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            if (!contents.saved) {\n                await MonaFileSystem.writeFile(contents.path, contents.data);\n            }\n            contents.saved = true;\n        }\n        catch (error) {\n            handleError(`Failed to save file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(saving);\n        }\n    }\n\n    if (!contents.stale && !contents.ran && doRun) {\n        if (!await begin(running)) {\n            reschedule();\n            return;\n        }\n        try {\n            if (contents.stale) {\n                return;\n            }\n            if (!contents.ran) {\n                contents.result = await MonaRuntime.run(\n                    contents.path,\n                    contents.data.startsWith('MONA DFA') ? 'dfa2dot' : contents.data.startsWith('MONA GTA') ? 'gta2dot' : 'mona'\n                );\n                contents.ran = true;\n            }\n        }\n        catch (error) {\n            handleError(`Failed to run file: ${String(error)}`);\n            return;\n        }\n        finally {\n            await end(running);\n        }\n    }\n\n    if (!contents.stale) {\n        setContents(currentContents => contents.stale ? currentContents : new Proxy(contents, {}))\n    }\n};\n\ntype Tab = 'Errors' | 'Graph' | 'SatisfyingExample' | 'CounterExample'\n\ninterface Context {\n    id: number\n    currentTab: Tab\n    setCurrentTab: (tab: Tab) => void\n    hasResult: boolean\n    visible: boolean\n}\n\nconst WorkspaceContext = createContext({} as Context);\n\nconst isCurrentTab = (context: Context, tab: Tab) => context.visible && (context.hasResult ? context.currentTab === tab : tab === 'Errors');\n\nconst viewportHeightIfTab = (context: Context, tab: Tab) => isCurrentTab(context, tab)\n    ? { 'data-uk-height-viewport': `offset-top: true; offset-bottom: #tabs${context.id}` }\n    : {};\n\nconst tabAttributes = (context: Context, tab: Tab) => ({\n    id: `${tab.toLowerCase()}${context.id}`,\n    hidden: !isCurrentTab(context, tab),\n    ...viewportHeightIfTab(context, tab)\n});\n\nconst TextArea = ({ tab, values }: {\n    tab: Tab\n    values: string[] | undefined\n}) => {\n    const context = useContext(WorkspaceContext);\n    return (\n        <textarea {...tabAttributes(context, tab)} className=\"uk-textarea uk-width-1-1\" style={{ fontFamily: 'monospace' }} readOnly={true} value={values?.join('\\n') ?? ''} />\n    );\n};\n\nconst Link = ({ tab, children }: {\n    tab: Tab\n    children: string\n}) => {\n    const context = useContext(WorkspaceContext);\n    return (\n        <li className={isCurrentTab(context, tab) ? 'uk-active' : tab !== 'Errors' && !context.hasResult ? 'uk-disabled' : ''}>\n            <a href={`#${tab.toLowerCase()}${context.id}`} onClick={e => { context.setCurrentTab(tab); e.preventDefault(); }}>{children}</a>\n        </li>\n    );\n};\n\nexport const Workspace = ({ id, path, readOnly, selected }: {\n    id: number\n    path: string\n    readOnly: boolean\n    selected: boolean\n}) => {\n    const editorDiv = useRef<HTMLDivElement>(null);\n    const graphDiv = useRef<HTMLDivElement>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const [currentTab, setCurrentTab] = useState<Tab>('Graph');\n    const [contents, setContents] = useState<Contents>({ path, data: '', saved: true, ran: true, result: null, stale: false });\n    const [autoSave, setAutoSave] = useState(true);\n    const [autoRun, setAutoRun] = useState(true);\n    const [saving, setSaving] = useState(false);\n    const [running, setRunning] = useState(false);\n    const [scale, setScale] = useState(1);\n\n    const context = useMemo<Context>(() => ({\n        id,\n        currentTab,\n        setCurrentTab,\n        hasResult: !!contents.result,\n        visible: selected\n    }), [id, currentTab, contents, selected]);\n\n    const appendError = (message: string) => {\n        setErrors(errors => errors.concat([message]));\n    };\n\n    const callbackWrapper = (doRun: boolean) => callback(contents, setContents, doRun, setSaving, setRunning, appendError);\n\n    useEffect(() => {\n        if (!autoSave) {\n            setAutoRun(false);\n        }\n    }, [autoSave]);\n\n    useEffect(() => {\n        if (autoRun) {\n            setAutoSave(true);\n        }\n    }, [autoRun]);\n\n    useEffect(() => {\n        if ((!autoSave || contents.saved) && (!autoRun || contents.result)) {\n            return;\n        }\n        const timeout = setTimeout(() => callback(contents, setContents, autoRun, setSaving, setRunning, appendError), 500);\n        return () => clearTimeout(timeout);\n    }, [contents, autoSave, autoRun]);\n\n    useEffect(() => {\n        const div = graphDiv.current;\n        if (!div) {\n            appendError('Graph DIV not found.');\n            return;\n        }\n        const graph = contents.result?.dfa?.graph;\n        if (!graph) {\n            return;\n        }\n        try {\n            let element = new DOMParser().parseFromString(graph, 'image/svg+xml').documentElement;\n            if (element.nodeName !== 'svg') {\n                element = document.createElement('div');\n                element.innerText = graph;\n            }\n            element.style.transformOrigin = 'top left';\n            element.style.transform = `scale(${scale})`;\n            div.appendChild(element);\n            return () => { div.removeChild(element); }\n        }\n        catch (error) {\n            appendError(`Cannot render file: ${String(error)}`);\n            return;\n        }\n    }, [contents, scale]);\n\n    useEffect(() => {\n        if (!editorDiv.current) {\n            appendError('Editor DIV not found.');\n            return;\n        }\n        const editor = monaco.editor.create(editorDiv.current, {\n            readOnly,\n            automaticLayout: true\n        });\n        editor.onDidChangeModelContent(e => {\n            const data = editor.getValue();\n            setContents(contents => {\n                if (contents.data === data) {\n                    return contents;\n                }\n                contents.stale = true;\n                return {\n                    path,\n                    data,\n                    saved: e.isFlush,\n                    ran: data.length === 0,\n                    result: null,\n                    stale: false,\n                }\n            });\n            setErrors([]);\n        });\n\n        let isFirstSet = true;\n        const setContentsAndClose = (contents: string | null) => {\n            if (contents != null && (readOnly || isFirstSet)) {\n                isFirstSet = false;\n                const view = editor.saveViewState();\n                editor.setValue(contents);\n                if (view) {\n                    editor.restoreViewState(view);\n                }\n            }\n        };\n        MonaFileSystem.addFileListener(path, setContentsAndClose);\n        MonaFileSystem.readFile(path)\n            .then(setContentsAndClose)\n            .catch(reason => appendError(`Failed to read file: ${String(reason)}`));\n\n        return () => {\n            MonaFileSystem.removeFileListener(path, setContentsAndClose);\n            editor.dispose();\n        }\n    }, [path, readOnly]);\n\n    return (\n        <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid>\n            <div className=\"uk-width-1-2\">\n                <div ref={editorDiv} {...selected && { 'data-uk-height-viewport': \"offset-top: true; offset-bottom: true\" }}></div>\n                <nav className=\"uk-flex uk-flex-bottom uk-navbar-container\" data-uk-navbar>\n                    <div className=\"uk-navbar-left\">\n                        <div className=\"uk-navbar-item\">\n                            <button className=\"uk-button uk-button-default\" disabled={contents.saved || saving} title=\"Save File\" onClick={() => callbackWrapper(false)}><span data-uk-icon=\"database\"></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoSave} onChange={e => setAutoSave(e.target.checked)} /> Auto-Save</label>\n                            <div data-uk-spinner style={{ visibility: saving ? 'visible' : 'hidden' }}></div>\n                        </div>\n                        <div className=\"uk-navbar-item\">\n                            <button className={`uk-button uk-button-${running ? 'danger' : 'primary'}`} disabled={contents.ran} title={running ? 'Abort Run' : 'Run File'} onClick={() => running ? MonaRuntime.stop('Cancelled by user.') : callbackWrapper(true)}><span data-uk-icon={running ? 'bolt' : 'play'}></span></button>\n                            <label><input type=\"checkbox\" className=\"uk-checkbox\" checked={autoRun} onChange={e => setAutoRun(e.target.checked)} /> Auto-Run</label>\n                            <div data-uk-spinner style={{ visibility: running ? 'visible' : 'hidden' }}></div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n            <div className=\"uk-width-1-2\">\n                <WorkspaceContext.Provider value={context}>\n                    <TextArea tab=\"Errors\" values={errors} />\n                    <div {...tabAttributes(context, 'Graph')}>\n                        <div className=\"uk-margin\">\n                            <input className=\"uk-range\" type=\"range\" min=\"1\" max=\"10\" step=\"0.1\" value={scale} onChange={e => setScale(parseFloat(e.target.value))} />\n                        </div>\n                        <div className=\"uk-panel uk-panel-scrollable\" {...viewportHeightIfTab(context, 'Graph')}>\n                            <div ref={graphDiv}></div>\n                        </div>\n                    </div>\n                    <TextArea tab=\"SatisfyingExample\" values={contents.result?.satisfyingExample} />\n                    <TextArea tab=\"CounterExample\" values={contents.result?.counterExample} />\n                    <div id={`tabs${context.id}`}>\n                        <ul className=\"uk-tab-bottom uk-margin-remove-bottom uk-tab\">\n                            <Link tab=\"Errors\">Errors</Link>\n                            <Link tab=\"Graph\">Graph</Link>\n                            <Link tab=\"SatisfyingExample\">Satisfying Example</Link>\n                            <Link tab=\"CounterExample\">Counter-Example</Link>\n                        </ul>\n                    </div>\n                </WorkspaceContext.Provider>\n            </div>\n        </div>\n    );\n};\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport UIkit from 'uikit';\n\nexport async function prompt(message: string): Promise<string | null> {\n    try {\n        return await UIkit.modal.prompt(message, '');\n    } catch {\n        return window.prompt(message);\n    }\n}\n\nexport async function confirm(message: string): Promise<boolean> {\n    try {\n        await UIkit.modal.confirm(message);\n        return true;\n    } catch (error) {\n        return error ? window.confirm(message) : false;\n    }\n}\n\nexport async function alert(message: string): Promise<void> {\n    try {\n        await UIkit.modal.alert(message);\n    } catch {\n        window.alert(message);\n    }\n}\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useReducer, useState } from 'react';\nimport { AppContext } from '.';\nimport { alert, confirm } from './helpers';\nimport { MonaDirectoryContents, MonaFileSystem, MonaInputPath, MonaOutputPath } from './mona';\n\nconst isInvalidName = (name: string) => name.length === 0 || name.includes('/');\n\nconst getName = (path: string) => path.substring(path.lastIndexOf('/') + 1);\n\nconst File = ({ path, isOutput }: {\n    path: string\n    isOutput: boolean\n}) => {\n    const app = useContext(AppContext);\n    const name = getName(path);\n\n    const openFile = () => app.openTab(path, isOutput);\n\n    const deleteFile = async () => {\n        if (await confirm(`Are you sure you want to delete the file '${path}'?`)) {\n            try { await MonaFileSystem.deleteFile(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\"></div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <button className=\"uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-default\" style={{ textTransform: 'none' }} title=\"Open File\" onClick={openFile}>\n                    <span data-uk-icon=\"file-text\"></span> {name}\n                </button>\n            </div>\n            <div className=\"uk-width-auto\">\n                <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete File\" onClick={deleteFile}>\n                    <span data-uk-icon=\"close\"></span>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nconst Directory = ({ path, isOutput, isRoot }: {\n    path: string\n    isOutput: boolean\n    isRoot: boolean\n}) => {\n    const app = useContext(AppContext);\n    const [contents, setContents] = useState<MonaDirectoryContents | null | Error>(null);\n    const [expanded, toggleExpanded] = useReducer((state: boolean) => {\n        state = !state;\n        window.localStorage.setItem(`expand${path}`, JSON.stringify(state));\n        return state;\n    }, JSON.parse(window.localStorage.getItem(`expand${path}`) ?? 'true') as boolean);\n    const [newChildName, setNewChildName] = useState<string>('');\n\n    const name = getName(path);\n\n    useEffect(() => {\n        MonaFileSystem.addDirectoryListener(path, setContents);\n        MonaFileSystem.enumDirectory(path).then(setContents).catch(reason => setContents(new Error(String(reason))));\n        return () => MonaFileSystem.removeDirectoryListener(path, setContents);\n    }, [path]);\n\n\n    const createFile = async () => {\n        const childPath = `${path}/${newChildName}`;\n        try { await MonaFileSystem.createFile(childPath); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n        app.openTab(childPath, isOutput);\n    }\n\n    const createDirectory = async () => {\n        try { await MonaFileSystem.createDirectory(`${path}/${newChildName}`); }\n        catch (error) { return await alert(String(error)); }\n        setNewChildName('');\n    }\n\n    const deleteDirectory = async () => {\n        if (contents && !(contents instanceof Error) && (contents.directories.length > 0 || contents.files.length > 0)) {\n            await alert(`The directory '${path}' is not empty.`);\n        }\n        else if (await confirm(`Are you sure you want to delete the folder '${path}'?`)) {\n            try { await MonaFileSystem.deleteDirectory(path); }\n            catch (error) { await alert(String(error)); }\n        }\n    };\n\n    return (\n        <div className=\"uk-flex\">\n            <div className=\"uk-width-auto\">\n                <div className=\"uk-icon-image\">\n                    {contents && <span data-uk-icon={expanded ? 'chevron-down' : 'chevron-right'} style={{ cursor: 'pointer' }} onClick={toggleExpanded}></span>}\n                </div>\n            </div>\n            <div className=\"uk-width-expand\">\n                <div className=\"uk-flex\">\n                    <div className=\"uk-width-expand\">\n                        <button className={`uk-width-1-1 uk-text-left uk-button uk-button-small uk-button-${isRoot ? 'primary' : 'secondary'}`} title={`${contents ? (expanded ? 'Collapse' : 'Expand') : 'Loading'} Folder`} style={{ textTransform: 'none' }} onClick={toggleExpanded} disabled={!contents}>\n                            <span data-uk-icon=\"folder\"></span><span className=\"uk-margin-small-left uk-margin-small-right\">{name}</span>{!contents && <div data-uk-spinner=\"ratio: 0.5\"></div>}\n                        </button>\n                    </div>\n                    <div className=\"uk-width-auto\">\n                        {isRoot ||\n                            <button className=\"uk-button uk-button-small uk-button-danger uk-padding-remove\" title=\"Delete Folder\" onClick={deleteDirectory}>\n                                <span data-uk-icon=\"close\"></span>\n                            </button>\n                        }\n                    </div>\n                </div>\n                {contents && expanded && (contents instanceof Error ?\n                    <div className=\"uk-alert-danger\">\n                        <p>{contents}</p>\n                    </div>\n                    :\n                    <>\n                        {contents.directories.map(childName => <Directory key={childName} path={`${path}/${childName}`} isOutput={isOutput} isRoot={false} />)}\n                        {contents.files.map(childName => <File key={childName} path={`${path}/${childName}`} isOutput={isOutput} />)}\n                        <div className=\"uk-flex\">\n                            <div className=\"uk-width-auto\">\n                                <div className=\"uk-icon-image\"></div>\n                            </div>\n                            <div className=\"uk-width-expand\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" data-uk-icon=\"plus\"></span>\n                                    <input className=\"uk-input uk-form-small uk-width-1-1\" placeholder={`New ${name} ${isOutput ? 'folder' : 'item'}...`} value={newChildName} onChange={e => setNewChildName(e.target.value)} />\n                                </div>\n                            </div>\n                            <div className=\"uk-width-auto\">\n                                <div className=\"uk-button-group\">\n                                    {isOutput ||\n                                        <button className=\"uk-button uk-button-small uk-button-primary uk-padding-remove\" title=\"Create File\" onClick={createFile} disabled={isInvalidName(newChildName)}>\n                                            <span data-uk-icon=\"file-text\"></span>\n                                        </button>\n                                    }\n                                    <button className=\"uk-button uk-button-small uk-button-secondary uk-padding-remove\" title=\"Create Directory\" onClick={createDirectory} disabled={isInvalidName(newChildName)}>\n                                        <span data-uk-icon=\"folder\"></span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport const Browser = () => (\n    <div className=\"uk-text-nowrap\">\n        <Directory path={MonaInputPath} isOutput={false} isRoot={true} />\n        <Directory path={MonaOutputPath} isOutput={true} isRoot={true} />\n    </div>\n);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '.';\nimport { MonaFileSystem } from './mona';\n\nexport interface Tabs {\n    [path: string]: {\n        readOnly: boolean\n        selected: boolean\n    }\n}\n\nexport class TabsHandler {\n    constructor(private setTabs: (setter: (value: Tabs) => Tabs) => void) { }\n\n    openTab(path: string, readOnly: boolean): void {\n        this.setTabs(tabs => ({\n            ...Object.fromEntries(Object.entries(tabs).map(([path, tab]) => [path, { ...tab, selected: false }])),\n            [path]: { readOnly, selected: true }\n        }));\n    }\n\n    closeTab(path: string): void {\n        this.setTabs(tabs => {\n            const tab = tabs[path];\n            if (tab) {\n                const newTabs = { ...tabs };\n                delete newTabs[path];\n                if (tab.selected) {\n                    const keys = Object.keys(tabs);\n                    const index = keys.indexOf(path);\n                    const selectedPath = (index + 1) < keys.length ? keys[index + 1] : (index - 1) >= 0 ? keys[index - 1] : undefined;\n                    if (selectedPath !== undefined) {\n                        const selectedTab = newTabs[selectedPath];\n                        if (selectedTab) {\n                            newTabs[selectedPath] = { ...selectedTab, selected: true };\n                        }\n                    }\n                }\n                return newTabs;\n            }\n            else {\n                return tabs;\n            }\n        });\n    }\n}\n\nexport const Tab = ({ id, path, selected, readOnly }: {\n    id: string\n    path: string\n    selected: boolean\n    readOnly: boolean\n}) => {\n    const app = useContext(AppContext);\n    const [deleted, setDeleted] = useState(false);\n\n    useEffect(() => {\n        const listener = (contents: string | null) => setDeleted(contents == null);\n        MonaFileSystem.addFileListener(path, listener);\n        MonaFileSystem.isFile(path).then(isFile => setDeleted(!isFile)).catch(console.trace);\n        return () => MonaFileSystem.removeFileListener(path, listener);\n    }, [app, path]);\n\n    return (\n        <li className={selected ? 'uk-active' : ''}>\n            <a href={id} onClick={e => { app.openTab(path, readOnly); e.preventDefault(); }}>\n                <span uk-icon=\"icon: file-text\"></span>\n                <span className=\"uk-margin-small-left uk-margin-small-right\" style={{ textTransform: 'none' }}>{path}{readOnly && ' (read-only)'}{deleted && ' (deleted)'}</span>\n                <button data-uk-close onClick={e => { app.closeTab(path); e.stopPropagation(); e.preventDefault(); }}>\n                </button>\n            </a>\n        </li>\n    );\n};\n","import UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport './../node_modules/uikit/dist/css/uikit.min.css';\nUIkit.use(Icons);\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nimport { createContext, useEffect, useMemo, useReducer } from 'react';\nimport { render } from 'react-dom';\nimport { Browser } from './browser';\nimport { MonaFileSystem, MonaInputPath, MonaOutputPath } from './mona';\nimport { Tab, TabsHandler, Tabs } from './tabs';\nimport './uikitloader.js';\nimport { Workspace } from './workspace';\n\nexport const AppContext = createContext({} as {\n    openTab: (path: string, readOnly: boolean) => void\n    closeTab: (path: string) => void\n});\n\nconst createSampleOnFirstRun = async (setTabs: (setter: (value: Tabs) => Tabs) => void) => {\n    const isDirectoryEmpty = async (path: string) => {\n        const contents = await MonaFileSystem.enumDirectory(path);\n        return contents.directories.length === 0 && contents.files.length === 0;\n    };\n\n    if (await isDirectoryEmpty(MonaInputPath) && await isDirectoryEmpty(MonaOutputPath)) {\n        const exampleFileName = `${MonaInputPath}/example`;\n        await MonaFileSystem.writeFile(exampleFileName, '# As an example, you could try:\\nvar2 P,Q;\\nP\\\\Q = {0,4} union {1,2};\\n');\n        setTabs(_ => ({ [exampleFileName]: { selected: true, readOnly: false } }));\n    }\n};\n\nconst App = () => {\n    const [tabs, setTabs] = useReducer((tabs: Tabs, action: (tabs: Tabs) => Tabs) => {\n        const result = action(tabs);\n        window.localStorage.setItem('tabs', JSON.stringify(result));\n        return result;\n    }, JSON.parse(window.localStorage.getItem('tabs') ?? '{}') as Tabs);\n    const tabHandler = useMemo(() => new TabsHandler(setTabs), []);\n\n    useEffect(() => {\n        createSampleOnFirstRun(setTabs);\n    }, []);\n\n    return (\n        <AppContext.Provider value={tabHandler}>\n            <nav className=\"uk-navbar-container uk-navbar-transparent uk-light uk-background-primary\" data-uk-navbar>\n                <div className=\"uk-navbar-left\">\n                    <a className=\"uk-navbar-item uk-logo\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.brics.dk/mona/\">MONA Web</a>\n                </div>\n                <div className=\"uk-navbar-right\">\n                    <div className=\"uk-navbar-item\">\n                        <a className=\"uk-button uk-button-default\" target=\"_blank\" rel=\"noreferrer\" href=\"http://www.brics.dk/mona/mona14.pdf\">Manual</a>\n                    </div>\n                </div>\n            </nav>\n            <div className=\"uk-grid-divider uk-grid-small uk-flex-nowrap\" data-uk-grid data-uk-height-viewport=\"offset-top: true\">\n                <div className=\"uk-width-medium\">\n                    <ul className=\"uk-flex-center uk-tab\">\n                        <li className=\"uk-active\"><a href=\"#browser\" onClick={e => e.preventDefault()}><span uk-icon=\"icon: copy\"></span><span className=\"uk-margin-small-left\" style={{ textTransform: 'none' }}>Files</span></a></li>\n                    </ul>\n                    <div id=\"browser\">\n                        <Browser />\n                    </div>\n                </div>\n                <div className=\"uk-width-extend\">\n                    <ul className=\"uk-tab\">\n                        {Object.entries(tabs).map(([path, tab], index) => <Tab key={path} id={`#workspace${index}`} path={path} selected={tab.selected} readOnly={tab.readOnly} />)}\n                    </ul>\n                    <div className=\"uk-margin\">\n                        {Object.entries(tabs).map(([path, tab], index) => <div key={path} id={`workspace${index}`} hidden={!tab.selected}><Workspace id={index} path={path} {...tab} /></div>)}\n                    </div>\n                </div>\n            </div>\n        </AppContext.Provider>\n    );\n};\n\nrender(<App />, document.getElementById('app'));\n","/*\n * MONA-WEB\n * Copyright (C) 2021 Manuel Meitinger.\n *\n * MONA\n * Copyright (C) 1997-2013 Aarhus University.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the  Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,\n * USA.\n */\n\nexport const MonaInputPath = '/input';\nexport const MonaOutputPath = '/output';\n\nexport interface MonaDirectoryContents {\n    directories: string[]\n    files: string[]\n}\n\ninterface Node {\n    mode: number\n    contents: {\n        [name: string]: Node\n    }\n}\n\ninterface FileSystem {\n    pull: () => Promise<void>\n    read: (path: string) => string\n    write: (path: string, data: string) => Promise<void>\n    unlink: (path: string) => Promise<void>\n    mkdir: (path: string) => Promise<void>\n    rmdir: (path: string) => Promise<void>\n    node: (path: string) => Node\n    tryNode: (path: string) => Node | null\n    isFile: (node: Node) => boolean\n    isDirectory: (node: Node) => boolean\n}\n\nexport type MonaFileListener = (contents: string | null) => void\n\nexport type MonaDirectoryListener = (contents: MonaDirectoryContents) => void\n\nexport class MonaFileSystem {\n    private static readonly _fs = this.buildFileSystem();\n    private static readonly _fileListeners = new Map<string, Set<MonaFileListener>>();\n    private static readonly _directoryListeners = new Map<string, Set<MonaDirectoryListener>>();\n\n    private static async buildFileSystem(): Promise<FileSystem> {\n        // any-thing goes in this method, so be careful\n        const module = await (global as any).MonaModule();\n        const fs = module.FS;\n        fs.mkdir(MonaInputPath);\n        fs.mkdir(MonaOutputPath);\n        const inputMount = fs.mount(module.IDBFS, {}, MonaInputPath);\n        const outputMount = fs.mount(module.IDBFS, {}, MonaOutputPath);\n        await new Promise<void>((resolve, reject) => fs.syncfs(true, (error: any) => error ? reject(error) : resolve()));\n        const modify = async (path: string, op: (path: string) => void) => {\n            const isOutput = this.isOutputPath(path);\n            if (isOutput && !MonaRuntime.isIdle) {\n                throw new Error(`Operation on path '${path}' can only be initiated once all pending MONA tasks have finished.`);\n            }\n            op(path);\n            await new Promise<void>((resolve, reject) => module.IDBFS.syncfs(isOutput ? outputMount.mount : inputMount.mount, false, (error: any) => error ? reject(error) : resolve()));\n        };\n        return {\n            pull: () => new Promise<void>((resolve, reject) => module.IDBFS.syncfs(outputMount.mount, true, (error: any) => error ? reject(error) : resolve())),\n            read: (path) => fs.readFile(path, { encoding: 'utf8' }),\n            write: (path, data) => modify(path, path => fs.writeFile(path, data)),\n            unlink: (path) => modify(path, path => fs.unlink(path)),\n            mkdir: (path) => modify(path, path => fs.mkdir(path)),\n            rmdir: (path) => modify(path, path => fs.rmdir(path)),\n            node: (path) => fs.lookupPath(path, { follow: true }).node,\n            tryNode: (path) => fs.analyzePath(path, false).object,\n            isFile: (node) => fs.isFile(node.mode),\n            isDirectory: (node) => fs.isDir(node.mode),\n        };\n    }\n\n    private static isOutputPath(path: string): boolean {\n        return path.startsWith(MonaOutputPath) && (path.length === MonaOutputPath.length || path[MonaOutputPath.length] === '/');\n    }\n\n    static async refresh(): Promise<void> {\n        const fs = await this._fs;\n        await fs.pull();\n        for (const [path, listeners] of this._fileListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                this.notifyListenersDirect(listeners, node && fs.isFile(node) ? fs.read(path) : null);\n            }\n        }\n        for (const [path, listeners] of this._directoryListeners) {\n            if (this.isOutputPath(path)) {\n                const node = fs.tryNode(path);\n                if (node && fs.isDirectory(node)) {\n                    this.notifyListenersDirect(listeners, this.getDirectoryContents(fs, path));\n                }\n            }\n        }\n    }\n\n    private static ensureNotExists(fs: FileSystem, path: string): void {\n        if (fs.tryNode(path)) {\n            throw new Error(`A node at path '${path}' already exists.`)\n        }\n    }\n\n    //\n    //  Files\n    //\n\n    static async isFile(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isFile(node);\n    }\n\n    static async createFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        await fs.write(path, '');\n        this.notifyFileListeners(path, '');\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async readFile(path: string): Promise<string> {\n        const fs = await this._fs;\n        return fs.read(path);\n    }\n\n    static async writeFile(path: string, contents: string): Promise<void> {\n        const fs = await this._fs;\n        const created = fs.tryNode(path) == null;\n        await fs.write(path, contents);\n        this.notifyFileListeners(path, contents);\n        if (created) {\n            this.notifyParentDirectoryListeners(fs, path);\n        }\n    }\n\n    static async deleteFile(path: string): Promise<void> {\n        const fs = await this._fs;\n        await fs.unlink(path);\n        this.notifyFileListeners(path, null);\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addFileListener(path: string, listener: MonaFileListener): void {\n        this.addListener(this._fileListeners, path, listener);\n    }\n\n    static removeFileListener(path: string, listener: MonaFileListener): void {\n        this.removeListener(this._fileListeners, path, listener);\n    }\n\n    private static notifyFileListeners(path: string, contents: string | null): void {\n        this.notifyListeners(this._fileListeners, path, contents);\n    }\n\n    //\n    // Directories\n    //\n\n    private static getDirectoryContents(fs: FileSystem, path: string): MonaDirectoryContents {\n        const entries = Object.entries(fs.node(path).contents);\n        const filter = (predicate: (node: Node) => boolean): string[] => entries.filter(([_, node]) => predicate(node)).map(([name, _]) => name).sort();\n        return {\n            directories: filter(node => fs.isDirectory(node)),\n            files: filter(node => fs.isFile(node)),\n        };\n    }\n\n    static async isDirectory(path: string): Promise<boolean> {\n        const fs = await this._fs;\n        const node = fs.tryNode(path);\n        return !!node && fs.isDirectory(node);\n    }\n\n    static async createDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        this.ensureNotExists(fs, path);\n        await fs.mkdir(path);\n        this.notifyDirectoryListeners(path, { directories: [], files: [] });\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static async enumDirectory(path: string): Promise<MonaDirectoryContents> {\n        const fs = await this._fs;\n        return this.getDirectoryContents(fs, path);\n    }\n\n    static async deleteDirectory(path: string): Promise<void> {\n        const fs = await this._fs;\n        await fs.rmdir(path);\n        this.notifyParentDirectoryListeners(fs, path);\n    }\n\n    static addDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.addListener(this._directoryListeners, path, listener);\n    }\n\n    static removeDirectoryListener(path: string, listener: MonaDirectoryListener): void {\n        this.removeListener(this._directoryListeners, path, listener);\n    }\n\n    private static notifyDirectoryListeners(path: string, contents: MonaDirectoryContents): void {\n        this.notifyListeners(this._directoryListeners, path, contents);\n    }\n\n    private static notifyParentDirectoryListeners(fs: FileSystem, path: string): void {\n        const lastSeparator = path.lastIndexOf('/');\n        if (lastSeparator > -1) {\n            path = path.substring(0, lastSeparator);\n            this.notifyDirectoryListeners(path, this.getDirectoryContents(fs, path));\n        }\n    }\n\n    //\n    // Listeners\n    //\n\n    private static addListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath) {\n            listenersForPath.add(listener);\n        }\n        else {\n            listeners.set(path, new Set([listener]));\n        }\n    }\n\n    private static removeListener<T>(listeners: Map<string, Set<T>>, path: string, listener: T): void {\n        const listenersForPath = listeners.get(path);\n        if (listenersForPath && listenersForPath.delete(listener) && listenersForPath.size === 0) {\n            listeners.delete(path);\n        }\n    }\n\n    private static notifyListeners<T>(listeners: Map<string, Set<(contents: T) => void>>, path: string, contents: T): void {\n        const listenersDirect = listeners.get(path);\n        if (listenersDirect) {\n            this.notifyListenersDirect(listenersDirect, contents);\n        };\n    }\n\n    private static notifyListenersDirect<T>(listeners: Set<(contents: T) => void>, contents: T): void {\n        listeners.forEach(listener => {\n            try { listener(contents); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n\nexport interface MonaData {\n    id: number\n    dfa?: {\n        freeVariables?: string[]\n        transitions?: {\n            [from: string]: {\n                [input: string]: string[]\n            }\n        }\n        initialState?: string\n        acceptingStates?: string[]\n        rejectingStates?: string[]\n        dontCareStates?: string[]\n        graph: string\n    }\n    counterExample?: string[]\n    satisfyingExample?: string[]\n    timings?: {\n        [label: string]: number\n    }\n}\n\nexport type MonaRunListener = (isRunning: boolean) => void\n\ninterface Task {\n    resolve: (value: MonaData | PromiseLike<MonaData>) => void\n    reject: (reason: any) => void\n}\n\nexport class MonaRuntime {\n    private static _worker = this.createWorker();\n    private static readonly _tasks = new Map<number, Task>();\n    private static readonly _runListeners = new Set<MonaRunListener>()\n    private static _nextId = 0;\n\n    private static createWorker(): Worker {\n        const worker = new Worker('/MONA-WEB/static/js/worker.js', { name: 'Mona' });\n        worker.onerror = e => this.stop(`Error in worker: ${e.message} (${e.lineno}:${e.colno})`);\n        worker.onmessageerror = e => this.finishTask(e.data.id, task => task.reject('Failed to deserialize worker message.'));\n        worker.onmessage = e => this.finishTask(e.data.id, task => {\n            MonaFileSystem.refresh().catch(error => console.trace(error));\n            if (e.data.error) {\n                task.reject(e.data.error);\n            }\n            else {\n                task.resolve(e.data);\n            }\n        });\n        return worker;\n    }\n\n    private static destroyWorker(worker: Worker): void {\n        worker.terminate();\n        worker.onerror = null;\n        worker.onmessageerror = null;\n        worker.onmessage = null;\n    }\n\n    private static finishTask(id: number, cb: (task: Task) => void): void {\n        const task = this._tasks.get(id);\n        if (task) {\n            console.assert(this._tasks.delete(id));\n            if (this._tasks.size === 0) {\n                this.notifyRunListeners(false);\n            }\n            try { cb(task); }\n            catch (error) { console.trace(error); }\n        }\n    }\n\n    private static notifyRunListeners(isRunning: boolean): void {\n        this._runListeners.forEach(runListener => {\n            try { runListener(isRunning); }\n            catch (error) { console.trace(error); }\n        });\n    }\n\n    static addRunListener(listener: MonaRunListener): void {\n        this._runListeners.add(listener);\n    }\n\n    static removeRunListener(listener: MonaRunListener): void {\n        this._runListeners.delete(listener);\n    }\n\n    static get isIdle(): boolean {\n        return this._tasks.size === 0;\n    }\n\n    static run(path: string, module: 'mona' | 'dfa2dot' | 'gta2dot'): Promise<MonaData> {\n        return new Promise<MonaData>((resolve, reject) => {\n            const id = ++this._nextId;\n            this._tasks.set(id, { resolve, reject });\n            if (this._tasks.size === 1) {\n                this.notifyRunListeners(true);\n            }\n            try { this._worker.postMessage({ id, path, module }); }\n            catch (error) { this.finishTask(id, task => task.reject(error)); }\n        });\n    }\n\n    static stop(reason: any): void {\n        const worker = this._worker;\n        this._worker = this.createWorker();\n        this.destroyWorker(worker);\n        const tasks = [...this._tasks.values()];\n        this._tasks.clear();\n        this.notifyRunListeners(false);\n        tasks.forEach(task => {\n            try { task.reject(reason); }\n            catch (error) { console.trace(error); }\n        });\n    }\n}\n"],"sourceRoot":""}