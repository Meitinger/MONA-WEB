# makefile.in generated by automake 1.11.6 from makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = mona$(EXEEXT)
subdir = Front
DIST_COMMON = $(srcdir)/makefile.am $(srcdir)/makefile.in parser.cpp \
	parser.h scanner.cpp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_mona_OBJECTS = mona-ast.$(OBJEXT) mona-astdump.$(OBJEXT) \
	mona-code.$(OBJEXT) mona-codedump.$(OBJEXT) \
	mona-codesubst.$(OBJEXT) mona-codetable.$(OBJEXT) \
	mona-freevars.$(OBJEXT) mona-ident.$(OBJEXT) \
	mona-lib.$(OBJEXT) mona-makeguide.$(OBJEXT) \
	mona-mona.$(OBJEXT) mona-offsets.$(OBJEXT) \
	mona-parser.$(OBJEXT) mona-predlib.$(OBJEXT) \
	mona-printline.$(OBJEXT) mona-reduce.$(OBJEXT) \
	mona-scanner.$(OBJEXT) mona-signature.$(OBJEXT) \
	mona-st_dfa.$(OBJEXT) mona-st_gta.$(OBJEXT) \
	mona-symboltable.$(OBJEXT) mona-timer.$(OBJEXT) \
	mona-untyped.$(OBJEXT)
mona_OBJECTS = $(am_mona_OBJECTS)
mona_DEPENDENCIES = ../Mem/libmonamem.la ../BDD/libmonabdd.la \
	../DFA/libmonadfa.la ../GTA/libmonagta.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
YLWRAP = $(top_srcdir)/config/ylwrap
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(mona_SOURCES)
DIST_SOURCES = $(mona_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFG = @CFG@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RELEASE = @RELEASE@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
MAINTAINERCLEANFILES = makefile.in makefile
BUILT_SOURCES = parser.h
AM_LFLAGS = -l
AM_YFLAGS = -d
mona_SOURCES = ast.cpp astdump.cpp ast.h code.cpp codedump.cpp code.h \
	codesubst.cpp codetable.cpp codetable.h deque.h env.h freevars.cpp \
	ident.cpp ident.h lib.cpp lib.h makeguide.cpp mona.cpp offsets.cpp \
	offsets.h parser.ypp predlib.cpp predlib.h printline.cpp printline.h \
	reduce.cpp scanner.lpp signature.cpp signature.h st_dfa.cpp st_dfa.h \
	st_gta.cpp st_gta.h str.h symboltable.cpp symboltable.h timer.cpp \
	timer.h untyped.cpp untyped.h

mona_CPPFLAGS = -I ../BDD
mona_LDADD = ../Mem/libmonamem.la ../BDD/libmonabdd.la ../DFA/libmonadfa.la \
	../GTA/libmonagta.la

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .lpp .o .obj .ypp
$(srcdir)/makefile.in:  $(srcdir)/makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Front/makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Front/makefile
.PRECIOUS: makefile
makefile: $(srcdir)/makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
parser.h: parser.cpp
	@if test ! -f $@; then rm -f parser.cpp; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) parser.cpp; else :; fi
mona$(EXEEXT): $(mona_OBJECTS) $(mona_DEPENDENCIES) $(EXTRA_mona_DEPENDENCIES) 
	@rm -f mona$(EXEEXT)
	$(CXXLINK) $(mona_OBJECTS) $(mona_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-ast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-astdump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-code.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-codedump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-codesubst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-codetable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-freevars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-ident.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-lib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-makeguide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-mona.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-offsets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-predlib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-printline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-reduce.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-signature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-st_dfa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-st_gta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-symboltable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mona-untyped.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mona-ast.o: ast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-ast.o -MD -MP -MF $(DEPDIR)/mona-ast.Tpo -c -o mona-ast.o `test -f 'ast.cpp' || echo '$(srcdir)/'`ast.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-ast.Tpo $(DEPDIR)/mona-ast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ast.cpp' object='mona-ast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-ast.o `test -f 'ast.cpp' || echo '$(srcdir)/'`ast.cpp

mona-ast.obj: ast.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-ast.obj -MD -MP -MF $(DEPDIR)/mona-ast.Tpo -c -o mona-ast.obj `if test -f 'ast.cpp'; then $(CYGPATH_W) 'ast.cpp'; else $(CYGPATH_W) '$(srcdir)/ast.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-ast.Tpo $(DEPDIR)/mona-ast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ast.cpp' object='mona-ast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-ast.obj `if test -f 'ast.cpp'; then $(CYGPATH_W) 'ast.cpp'; else $(CYGPATH_W) '$(srcdir)/ast.cpp'; fi`

mona-astdump.o: astdump.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-astdump.o -MD -MP -MF $(DEPDIR)/mona-astdump.Tpo -c -o mona-astdump.o `test -f 'astdump.cpp' || echo '$(srcdir)/'`astdump.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-astdump.Tpo $(DEPDIR)/mona-astdump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='astdump.cpp' object='mona-astdump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-astdump.o `test -f 'astdump.cpp' || echo '$(srcdir)/'`astdump.cpp

mona-astdump.obj: astdump.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-astdump.obj -MD -MP -MF $(DEPDIR)/mona-astdump.Tpo -c -o mona-astdump.obj `if test -f 'astdump.cpp'; then $(CYGPATH_W) 'astdump.cpp'; else $(CYGPATH_W) '$(srcdir)/astdump.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-astdump.Tpo $(DEPDIR)/mona-astdump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='astdump.cpp' object='mona-astdump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-astdump.obj `if test -f 'astdump.cpp'; then $(CYGPATH_W) 'astdump.cpp'; else $(CYGPATH_W) '$(srcdir)/astdump.cpp'; fi`

mona-code.o: code.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-code.o -MD -MP -MF $(DEPDIR)/mona-code.Tpo -c -o mona-code.o `test -f 'code.cpp' || echo '$(srcdir)/'`code.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-code.Tpo $(DEPDIR)/mona-code.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='code.cpp' object='mona-code.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-code.o `test -f 'code.cpp' || echo '$(srcdir)/'`code.cpp

mona-code.obj: code.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-code.obj -MD -MP -MF $(DEPDIR)/mona-code.Tpo -c -o mona-code.obj `if test -f 'code.cpp'; then $(CYGPATH_W) 'code.cpp'; else $(CYGPATH_W) '$(srcdir)/code.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-code.Tpo $(DEPDIR)/mona-code.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='code.cpp' object='mona-code.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-code.obj `if test -f 'code.cpp'; then $(CYGPATH_W) 'code.cpp'; else $(CYGPATH_W) '$(srcdir)/code.cpp'; fi`

mona-codedump.o: codedump.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codedump.o -MD -MP -MF $(DEPDIR)/mona-codedump.Tpo -c -o mona-codedump.o `test -f 'codedump.cpp' || echo '$(srcdir)/'`codedump.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codedump.Tpo $(DEPDIR)/mona-codedump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codedump.cpp' object='mona-codedump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codedump.o `test -f 'codedump.cpp' || echo '$(srcdir)/'`codedump.cpp

mona-codedump.obj: codedump.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codedump.obj -MD -MP -MF $(DEPDIR)/mona-codedump.Tpo -c -o mona-codedump.obj `if test -f 'codedump.cpp'; then $(CYGPATH_W) 'codedump.cpp'; else $(CYGPATH_W) '$(srcdir)/codedump.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codedump.Tpo $(DEPDIR)/mona-codedump.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codedump.cpp' object='mona-codedump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codedump.obj `if test -f 'codedump.cpp'; then $(CYGPATH_W) 'codedump.cpp'; else $(CYGPATH_W) '$(srcdir)/codedump.cpp'; fi`

mona-codesubst.o: codesubst.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codesubst.o -MD -MP -MF $(DEPDIR)/mona-codesubst.Tpo -c -o mona-codesubst.o `test -f 'codesubst.cpp' || echo '$(srcdir)/'`codesubst.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codesubst.Tpo $(DEPDIR)/mona-codesubst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codesubst.cpp' object='mona-codesubst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codesubst.o `test -f 'codesubst.cpp' || echo '$(srcdir)/'`codesubst.cpp

mona-codesubst.obj: codesubst.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codesubst.obj -MD -MP -MF $(DEPDIR)/mona-codesubst.Tpo -c -o mona-codesubst.obj `if test -f 'codesubst.cpp'; then $(CYGPATH_W) 'codesubst.cpp'; else $(CYGPATH_W) '$(srcdir)/codesubst.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codesubst.Tpo $(DEPDIR)/mona-codesubst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codesubst.cpp' object='mona-codesubst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codesubst.obj `if test -f 'codesubst.cpp'; then $(CYGPATH_W) 'codesubst.cpp'; else $(CYGPATH_W) '$(srcdir)/codesubst.cpp'; fi`

mona-codetable.o: codetable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codetable.o -MD -MP -MF $(DEPDIR)/mona-codetable.Tpo -c -o mona-codetable.o `test -f 'codetable.cpp' || echo '$(srcdir)/'`codetable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codetable.Tpo $(DEPDIR)/mona-codetable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codetable.cpp' object='mona-codetable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codetable.o `test -f 'codetable.cpp' || echo '$(srcdir)/'`codetable.cpp

mona-codetable.obj: codetable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-codetable.obj -MD -MP -MF $(DEPDIR)/mona-codetable.Tpo -c -o mona-codetable.obj `if test -f 'codetable.cpp'; then $(CYGPATH_W) 'codetable.cpp'; else $(CYGPATH_W) '$(srcdir)/codetable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-codetable.Tpo $(DEPDIR)/mona-codetable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='codetable.cpp' object='mona-codetable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-codetable.obj `if test -f 'codetable.cpp'; then $(CYGPATH_W) 'codetable.cpp'; else $(CYGPATH_W) '$(srcdir)/codetable.cpp'; fi`

mona-freevars.o: freevars.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-freevars.o -MD -MP -MF $(DEPDIR)/mona-freevars.Tpo -c -o mona-freevars.o `test -f 'freevars.cpp' || echo '$(srcdir)/'`freevars.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-freevars.Tpo $(DEPDIR)/mona-freevars.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freevars.cpp' object='mona-freevars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-freevars.o `test -f 'freevars.cpp' || echo '$(srcdir)/'`freevars.cpp

mona-freevars.obj: freevars.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-freevars.obj -MD -MP -MF $(DEPDIR)/mona-freevars.Tpo -c -o mona-freevars.obj `if test -f 'freevars.cpp'; then $(CYGPATH_W) 'freevars.cpp'; else $(CYGPATH_W) '$(srcdir)/freevars.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-freevars.Tpo $(DEPDIR)/mona-freevars.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='freevars.cpp' object='mona-freevars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-freevars.obj `if test -f 'freevars.cpp'; then $(CYGPATH_W) 'freevars.cpp'; else $(CYGPATH_W) '$(srcdir)/freevars.cpp'; fi`

mona-ident.o: ident.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-ident.o -MD -MP -MF $(DEPDIR)/mona-ident.Tpo -c -o mona-ident.o `test -f 'ident.cpp' || echo '$(srcdir)/'`ident.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-ident.Tpo $(DEPDIR)/mona-ident.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ident.cpp' object='mona-ident.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-ident.o `test -f 'ident.cpp' || echo '$(srcdir)/'`ident.cpp

mona-ident.obj: ident.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-ident.obj -MD -MP -MF $(DEPDIR)/mona-ident.Tpo -c -o mona-ident.obj `if test -f 'ident.cpp'; then $(CYGPATH_W) 'ident.cpp'; else $(CYGPATH_W) '$(srcdir)/ident.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-ident.Tpo $(DEPDIR)/mona-ident.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ident.cpp' object='mona-ident.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-ident.obj `if test -f 'ident.cpp'; then $(CYGPATH_W) 'ident.cpp'; else $(CYGPATH_W) '$(srcdir)/ident.cpp'; fi`

mona-lib.o: lib.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-lib.o -MD -MP -MF $(DEPDIR)/mona-lib.Tpo -c -o mona-lib.o `test -f 'lib.cpp' || echo '$(srcdir)/'`lib.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-lib.Tpo $(DEPDIR)/mona-lib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lib.cpp' object='mona-lib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-lib.o `test -f 'lib.cpp' || echo '$(srcdir)/'`lib.cpp

mona-lib.obj: lib.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-lib.obj -MD -MP -MF $(DEPDIR)/mona-lib.Tpo -c -o mona-lib.obj `if test -f 'lib.cpp'; then $(CYGPATH_W) 'lib.cpp'; else $(CYGPATH_W) '$(srcdir)/lib.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-lib.Tpo $(DEPDIR)/mona-lib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lib.cpp' object='mona-lib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-lib.obj `if test -f 'lib.cpp'; then $(CYGPATH_W) 'lib.cpp'; else $(CYGPATH_W) '$(srcdir)/lib.cpp'; fi`

mona-makeguide.o: makeguide.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-makeguide.o -MD -MP -MF $(DEPDIR)/mona-makeguide.Tpo -c -o mona-makeguide.o `test -f 'makeguide.cpp' || echo '$(srcdir)/'`makeguide.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-makeguide.Tpo $(DEPDIR)/mona-makeguide.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='makeguide.cpp' object='mona-makeguide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-makeguide.o `test -f 'makeguide.cpp' || echo '$(srcdir)/'`makeguide.cpp

mona-makeguide.obj: makeguide.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-makeguide.obj -MD -MP -MF $(DEPDIR)/mona-makeguide.Tpo -c -o mona-makeguide.obj `if test -f 'makeguide.cpp'; then $(CYGPATH_W) 'makeguide.cpp'; else $(CYGPATH_W) '$(srcdir)/makeguide.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-makeguide.Tpo $(DEPDIR)/mona-makeguide.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='makeguide.cpp' object='mona-makeguide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-makeguide.obj `if test -f 'makeguide.cpp'; then $(CYGPATH_W) 'makeguide.cpp'; else $(CYGPATH_W) '$(srcdir)/makeguide.cpp'; fi`

mona-mona.o: mona.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-mona.o -MD -MP -MF $(DEPDIR)/mona-mona.Tpo -c -o mona-mona.o `test -f 'mona.cpp' || echo '$(srcdir)/'`mona.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-mona.Tpo $(DEPDIR)/mona-mona.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mona.cpp' object='mona-mona.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-mona.o `test -f 'mona.cpp' || echo '$(srcdir)/'`mona.cpp

mona-mona.obj: mona.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-mona.obj -MD -MP -MF $(DEPDIR)/mona-mona.Tpo -c -o mona-mona.obj `if test -f 'mona.cpp'; then $(CYGPATH_W) 'mona.cpp'; else $(CYGPATH_W) '$(srcdir)/mona.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-mona.Tpo $(DEPDIR)/mona-mona.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mona.cpp' object='mona-mona.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-mona.obj `if test -f 'mona.cpp'; then $(CYGPATH_W) 'mona.cpp'; else $(CYGPATH_W) '$(srcdir)/mona.cpp'; fi`

mona-offsets.o: offsets.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-offsets.o -MD -MP -MF $(DEPDIR)/mona-offsets.Tpo -c -o mona-offsets.o `test -f 'offsets.cpp' || echo '$(srcdir)/'`offsets.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-offsets.Tpo $(DEPDIR)/mona-offsets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='offsets.cpp' object='mona-offsets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-offsets.o `test -f 'offsets.cpp' || echo '$(srcdir)/'`offsets.cpp

mona-offsets.obj: offsets.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-offsets.obj -MD -MP -MF $(DEPDIR)/mona-offsets.Tpo -c -o mona-offsets.obj `if test -f 'offsets.cpp'; then $(CYGPATH_W) 'offsets.cpp'; else $(CYGPATH_W) '$(srcdir)/offsets.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-offsets.Tpo $(DEPDIR)/mona-offsets.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='offsets.cpp' object='mona-offsets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-offsets.obj `if test -f 'offsets.cpp'; then $(CYGPATH_W) 'offsets.cpp'; else $(CYGPATH_W) '$(srcdir)/offsets.cpp'; fi`

mona-parser.o: parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-parser.o -MD -MP -MF $(DEPDIR)/mona-parser.Tpo -c -o mona-parser.o `test -f 'parser.cpp' || echo '$(srcdir)/'`parser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-parser.Tpo $(DEPDIR)/mona-parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser.cpp' object='mona-parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-parser.o `test -f 'parser.cpp' || echo '$(srcdir)/'`parser.cpp

mona-parser.obj: parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-parser.obj -MD -MP -MF $(DEPDIR)/mona-parser.Tpo -c -o mona-parser.obj `if test -f 'parser.cpp'; then $(CYGPATH_W) 'parser.cpp'; else $(CYGPATH_W) '$(srcdir)/parser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-parser.Tpo $(DEPDIR)/mona-parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser.cpp' object='mona-parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-parser.obj `if test -f 'parser.cpp'; then $(CYGPATH_W) 'parser.cpp'; else $(CYGPATH_W) '$(srcdir)/parser.cpp'; fi`

mona-predlib.o: predlib.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-predlib.o -MD -MP -MF $(DEPDIR)/mona-predlib.Tpo -c -o mona-predlib.o `test -f 'predlib.cpp' || echo '$(srcdir)/'`predlib.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-predlib.Tpo $(DEPDIR)/mona-predlib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='predlib.cpp' object='mona-predlib.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-predlib.o `test -f 'predlib.cpp' || echo '$(srcdir)/'`predlib.cpp

mona-predlib.obj: predlib.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-predlib.obj -MD -MP -MF $(DEPDIR)/mona-predlib.Tpo -c -o mona-predlib.obj `if test -f 'predlib.cpp'; then $(CYGPATH_W) 'predlib.cpp'; else $(CYGPATH_W) '$(srcdir)/predlib.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-predlib.Tpo $(DEPDIR)/mona-predlib.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='predlib.cpp' object='mona-predlib.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-predlib.obj `if test -f 'predlib.cpp'; then $(CYGPATH_W) 'predlib.cpp'; else $(CYGPATH_W) '$(srcdir)/predlib.cpp'; fi`

mona-printline.o: printline.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-printline.o -MD -MP -MF $(DEPDIR)/mona-printline.Tpo -c -o mona-printline.o `test -f 'printline.cpp' || echo '$(srcdir)/'`printline.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-printline.Tpo $(DEPDIR)/mona-printline.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printline.cpp' object='mona-printline.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-printline.o `test -f 'printline.cpp' || echo '$(srcdir)/'`printline.cpp

mona-printline.obj: printline.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-printline.obj -MD -MP -MF $(DEPDIR)/mona-printline.Tpo -c -o mona-printline.obj `if test -f 'printline.cpp'; then $(CYGPATH_W) 'printline.cpp'; else $(CYGPATH_W) '$(srcdir)/printline.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-printline.Tpo $(DEPDIR)/mona-printline.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printline.cpp' object='mona-printline.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-printline.obj `if test -f 'printline.cpp'; then $(CYGPATH_W) 'printline.cpp'; else $(CYGPATH_W) '$(srcdir)/printline.cpp'; fi`

mona-reduce.o: reduce.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-reduce.o -MD -MP -MF $(DEPDIR)/mona-reduce.Tpo -c -o mona-reduce.o `test -f 'reduce.cpp' || echo '$(srcdir)/'`reduce.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-reduce.Tpo $(DEPDIR)/mona-reduce.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='reduce.cpp' object='mona-reduce.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-reduce.o `test -f 'reduce.cpp' || echo '$(srcdir)/'`reduce.cpp

mona-reduce.obj: reduce.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-reduce.obj -MD -MP -MF $(DEPDIR)/mona-reduce.Tpo -c -o mona-reduce.obj `if test -f 'reduce.cpp'; then $(CYGPATH_W) 'reduce.cpp'; else $(CYGPATH_W) '$(srcdir)/reduce.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-reduce.Tpo $(DEPDIR)/mona-reduce.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='reduce.cpp' object='mona-reduce.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-reduce.obj `if test -f 'reduce.cpp'; then $(CYGPATH_W) 'reduce.cpp'; else $(CYGPATH_W) '$(srcdir)/reduce.cpp'; fi`

mona-scanner.o: scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-scanner.o -MD -MP -MF $(DEPDIR)/mona-scanner.Tpo -c -o mona-scanner.o `test -f 'scanner.cpp' || echo '$(srcdir)/'`scanner.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-scanner.Tpo $(DEPDIR)/mona-scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scanner.cpp' object='mona-scanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-scanner.o `test -f 'scanner.cpp' || echo '$(srcdir)/'`scanner.cpp

mona-scanner.obj: scanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-scanner.obj -MD -MP -MF $(DEPDIR)/mona-scanner.Tpo -c -o mona-scanner.obj `if test -f 'scanner.cpp'; then $(CYGPATH_W) 'scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/scanner.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-scanner.Tpo $(DEPDIR)/mona-scanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scanner.cpp' object='mona-scanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-scanner.obj `if test -f 'scanner.cpp'; then $(CYGPATH_W) 'scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/scanner.cpp'; fi`

mona-signature.o: signature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-signature.o -MD -MP -MF $(DEPDIR)/mona-signature.Tpo -c -o mona-signature.o `test -f 'signature.cpp' || echo '$(srcdir)/'`signature.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-signature.Tpo $(DEPDIR)/mona-signature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='signature.cpp' object='mona-signature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-signature.o `test -f 'signature.cpp' || echo '$(srcdir)/'`signature.cpp

mona-signature.obj: signature.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-signature.obj -MD -MP -MF $(DEPDIR)/mona-signature.Tpo -c -o mona-signature.obj `if test -f 'signature.cpp'; then $(CYGPATH_W) 'signature.cpp'; else $(CYGPATH_W) '$(srcdir)/signature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-signature.Tpo $(DEPDIR)/mona-signature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='signature.cpp' object='mona-signature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-signature.obj `if test -f 'signature.cpp'; then $(CYGPATH_W) 'signature.cpp'; else $(CYGPATH_W) '$(srcdir)/signature.cpp'; fi`

mona-st_dfa.o: st_dfa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-st_dfa.o -MD -MP -MF $(DEPDIR)/mona-st_dfa.Tpo -c -o mona-st_dfa.o `test -f 'st_dfa.cpp' || echo '$(srcdir)/'`st_dfa.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-st_dfa.Tpo $(DEPDIR)/mona-st_dfa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='st_dfa.cpp' object='mona-st_dfa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-st_dfa.o `test -f 'st_dfa.cpp' || echo '$(srcdir)/'`st_dfa.cpp

mona-st_dfa.obj: st_dfa.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-st_dfa.obj -MD -MP -MF $(DEPDIR)/mona-st_dfa.Tpo -c -o mona-st_dfa.obj `if test -f 'st_dfa.cpp'; then $(CYGPATH_W) 'st_dfa.cpp'; else $(CYGPATH_W) '$(srcdir)/st_dfa.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-st_dfa.Tpo $(DEPDIR)/mona-st_dfa.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='st_dfa.cpp' object='mona-st_dfa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-st_dfa.obj `if test -f 'st_dfa.cpp'; then $(CYGPATH_W) 'st_dfa.cpp'; else $(CYGPATH_W) '$(srcdir)/st_dfa.cpp'; fi`

mona-st_gta.o: st_gta.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-st_gta.o -MD -MP -MF $(DEPDIR)/mona-st_gta.Tpo -c -o mona-st_gta.o `test -f 'st_gta.cpp' || echo '$(srcdir)/'`st_gta.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-st_gta.Tpo $(DEPDIR)/mona-st_gta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='st_gta.cpp' object='mona-st_gta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-st_gta.o `test -f 'st_gta.cpp' || echo '$(srcdir)/'`st_gta.cpp

mona-st_gta.obj: st_gta.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-st_gta.obj -MD -MP -MF $(DEPDIR)/mona-st_gta.Tpo -c -o mona-st_gta.obj `if test -f 'st_gta.cpp'; then $(CYGPATH_W) 'st_gta.cpp'; else $(CYGPATH_W) '$(srcdir)/st_gta.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-st_gta.Tpo $(DEPDIR)/mona-st_gta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='st_gta.cpp' object='mona-st_gta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-st_gta.obj `if test -f 'st_gta.cpp'; then $(CYGPATH_W) 'st_gta.cpp'; else $(CYGPATH_W) '$(srcdir)/st_gta.cpp'; fi`

mona-symboltable.o: symboltable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-symboltable.o -MD -MP -MF $(DEPDIR)/mona-symboltable.Tpo -c -o mona-symboltable.o `test -f 'symboltable.cpp' || echo '$(srcdir)/'`symboltable.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-symboltable.Tpo $(DEPDIR)/mona-symboltable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='symboltable.cpp' object='mona-symboltable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-symboltable.o `test -f 'symboltable.cpp' || echo '$(srcdir)/'`symboltable.cpp

mona-symboltable.obj: symboltable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-symboltable.obj -MD -MP -MF $(DEPDIR)/mona-symboltable.Tpo -c -o mona-symboltable.obj `if test -f 'symboltable.cpp'; then $(CYGPATH_W) 'symboltable.cpp'; else $(CYGPATH_W) '$(srcdir)/symboltable.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-symboltable.Tpo $(DEPDIR)/mona-symboltable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='symboltable.cpp' object='mona-symboltable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-symboltable.obj `if test -f 'symboltable.cpp'; then $(CYGPATH_W) 'symboltable.cpp'; else $(CYGPATH_W) '$(srcdir)/symboltable.cpp'; fi`

mona-timer.o: timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-timer.o -MD -MP -MF $(DEPDIR)/mona-timer.Tpo -c -o mona-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-timer.Tpo $(DEPDIR)/mona-timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='timer.cpp' object='mona-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp

mona-timer.obj: timer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-timer.obj -MD -MP -MF $(DEPDIR)/mona-timer.Tpo -c -o mona-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-timer.Tpo $(DEPDIR)/mona-timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='timer.cpp' object='mona-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`

mona-untyped.o: untyped.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-untyped.o -MD -MP -MF $(DEPDIR)/mona-untyped.Tpo -c -o mona-untyped.o `test -f 'untyped.cpp' || echo '$(srcdir)/'`untyped.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-untyped.Tpo $(DEPDIR)/mona-untyped.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='untyped.cpp' object='mona-untyped.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-untyped.o `test -f 'untyped.cpp' || echo '$(srcdir)/'`untyped.cpp

mona-untyped.obj: untyped.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mona-untyped.obj -MD -MP -MF $(DEPDIR)/mona-untyped.Tpo -c -o mona-untyped.obj `if test -f 'untyped.cpp'; then $(CYGPATH_W) 'untyped.cpp'; else $(CYGPATH_W) '$(srcdir)/untyped.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/mona-untyped.Tpo $(DEPDIR)/mona-untyped.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='untyped.cpp' object='mona-untyped.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mona_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mona-untyped.obj `if test -f 'untyped.cpp'; then $(CYGPATH_W) 'untyped.cpp'; else $(CYGPATH_W) '$(srcdir)/untyped.cpp'; fi`

.lpp.cpp:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.ypp.cpp:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f parser.cpp
	-rm -f parser.h
	-rm -f scanner.cpp
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
